{
    "info": {
        "_postman_id": "f2545778-6004-49d3-815f-4bf2fac4410b",
        "name": "TFR CLOUD APIs",
        "description": "### Authorize\nRetrieve token first and put the value with 'Bearer ' prefix on Authorize value.\n### USER TYPES\nUSER_TYPE_ADMIN = 100\nUSER_TYPE_OFFICE = 200\nUSER_TYPE_RESTAURANT = 300\nUSER_TYPE_DRIVER = 400\n### ORDER STATUSES\nORDER_NEW = 1000\nORDER_DRIVERS_APPROVAL_WAITING = 3000\nORDER_DRIVERS_ACCEPTED = 3100\nORDER_DRIVERS_DECLINED = 3200\nORDER_PARTIALLY_RECEIVED = 4000\nORDER_RECEIVED = 4100\nORDER_PARTIALLY_DELIVERED = 5000\nORDER_DELIVERED = 5100\nORDER_CANCELLED = 6000\nORDER_COMPLETED = 7000\n### ORDER DRIVER STATUSES\nDRIVER_APPROVAL_WAITING = 100\nDRIVER_DECLINED = 200\nDRIVER_ACCEPTED = 300\nDRIVER_RECEIVED = 400\nDRIVER_DELIVERED = 500\nDRIVER_CANCELLED = 600\nDRIVER_COMPLETED = 700\n",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [{
        "name": "All Apis",
        "item": [{
                "name": "S1",
                "item": [{
                        "name": "token",
                        "item": [{
                                "name": "token create",
                                "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "var jsonData = JSON.parse(responseBody);",
                                                "",
                                                "pm.environment.set(\"access\",jsonData.access);",
                                                "pm.environment.set(\"refresh\", jsonData.refresh)",
                                                "",
                                                "postman.setNextRequest(\"token refresh create\")",
                                                "",
                                                "pm.test(\"Successful POST request\", function () {",
                                                "    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
                                                "});",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    },
                                    {
                                        "listen": "prerequest",
                                        "script": {
                                            "exec": [
                                                "var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
                                                "pm.globals.set(\"randomValue\",myRandomNumber);",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }
                                ],
                                "request": {
                                    "method": "POST",
                                    "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        },
                                        {
                                            "key": "Accept",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": {
                                        "mode": "raw",
                                        "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
                                        "options": {
                                            "raw": {
                                                "language": "json"
                                            }
                                        }
                                    },
                                    "url": {
                                        "raw": "{{baseUrl}}/token/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "token",
                                            ""
                                        ]
                                    }
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/token/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "token",
                                                ""
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
                                }]
                            },
                            {
                                "name": "token refresh create",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "postman.setNextRequest(\"restaurants create\")"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "POST",
                                    "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        },
                                        {
                                            "key": "Accept",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": {
                                        "mode": "raw",
                                        "raw": "{\n  \"refresh\": \"{{refresh}}\"\n}",
                                        "options": {
                                            "raw": {
                                                "language": "json"
                                            }
                                        }
                                    },
                                    "url": {
                                        "raw": "{{baseUrl}}/token/refresh/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "token",
                                            "refresh",
                                            ""
                                        ]
                                    },
                                    "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid."
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"refresh\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/token/refresh/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "token",
                                                "refresh",
                                                ""
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "{\n  \"refresh\": \"<string>\",\n  \"access\": \"incididunt esse deserunt consequat dolor\"\n}"
                                }]
                            }
                        ]
                    },
                    {
                        "name": "restaurants",
                        "item": [{
                            "name": "{id}",
                            "item": [{
                                    "name": "restaurants create",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "",
                                                "var jsonData= JSON.parse(responseBody)",
                                                "pm.environment.set(\"restaurantsID\",jsonData.id)",
                                                "",
                                                "var statusCode ;",
                                                "",
                                                "",
                                                "if(jsonData.name===\"\" || jsonData.users===\"\" || jsonData.address===\"\" ||",
                                                "   jsonData.email===\"\" ||  jsonData.phone===null || jsonData.commission===null || jsonData.fee===null",
                                                "   ) {",
                                                "        statusCode=400;",
                                                "    }",
                                                "    else{",
                                                "        statusCode=201;",
                                                "    }",
                                                "    pm.test(`Status code is ${statusCode}`, function () {",
                                                "    pm.response.to.have.status(statusCode);",
                                                "});",
                                                "",
                                                "",
                                                "",
                                                "",
                                                "",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "POST",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"users\": [\n    \"1\"\n  ],\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"commission\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/restaurants/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "restaurants",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "POST",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/restaurants/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "restaurants",
                                                    ""
                                                ]
                                            }
                                        },
                                        "status": "Created",
                                        "code": 201,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
                                    }]
                                },
                                {
                                    "name": "restaurants list",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                "",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/restaurants/?is_active=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "restaurants",
                                                ""
                                            ],
                                            "query": [{
                                                "key": "is_active",
                                                "value": "true"
                                            }]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/restaurants/?is_active=<string>",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "restaurants",
                                                    ""
                                                ],
                                                "query": [{
                                                    "key": "is_active",
                                                    "value": "<string>"
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
                                    }]
                                },
                                {
                                    "name": "restaurants read",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "restaurants",
                                                "{{restaurantsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/restaurants/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "restaurants",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this restaurant."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
                                    }]
                                },
                                {
                                    "name": "restaurants update",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "PUT",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"{{$randomFullName}}\",\n  \"users\": [\n    \"2\"\n  ],\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"commission\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "restaurants",
                                                "{{restaurantsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "PUT",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/restaurants/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "restaurants",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this restaurant."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
                                    }]
                                },
                                {
                                    "name": "restaurants partial update",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "PATCH",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"test{{randomValue}}\",\n  \"users\": [\n    \"2\"\n  ],\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"commission\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "restaurants",
                                                "{{restaurantsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "PATCH",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/restaurants/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "restaurants",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this restaurant."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
                                    }]
                                },
                                {
                                    "name": "restaurants delete",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 204\", function () {",
                                                "    pm.response.to.have.status(204);",
                                                "});",
                                                "",
                                                "postman.setNextRequest(\"groups create\")"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "restaurants",
                                                "{{restaurantsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "DELETE",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/restaurants/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "restaurants",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this restaurant."
                                                }]
                                            }
                                        },
                                        "status": "No Content",
                                        "code": 204,
                                        "_postman_previewlanguage": "text",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }],
                                        "cookie": [],
                                        "body": ""
                                    }]
                                }
                            ]
                        }]
                    },
                    {
                        "name": "groups",
                        "item": [{
                            "name": "{id}",
                            "item": [{
                                    "name": "groups create",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "var jsonData = JSON.parse(responseBody);",
                                                "",
                                                "console.log(jsonData)",
                                                "var statusCode;",
                                                "if(jsonData.name===\"\" || jsonData.type===null || jsonData.permissions[0]===null ){",
                                                "    statusCode=400;",
                                                "}",
                                                "else{",
                                                "    statusCode=201",
                                                "}",
                                                "",
                                                "",
                                                "pm.test(`Status code is ${statusCode}`, function () {",
                                                "    pm.response.to.have.status(statusCode);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "POST",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"200\",\n  \"permissions\": [\n    \"4\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/groups/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "groups",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "POST",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/groups/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "groups",
                                                    ""
                                                ]
                                            }
                                        },
                                        "status": "Created",
                                        "code": 201,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
                                    }]
                                },
                                {
                                    "name": "groups list",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "var jsonData = JSON.parse(responseBody);",
                                                "",
                                                "var statusCode=0;",
                                                "",
                                                "jsonData.map(item=>{",
                                                "    if(item.id===\"\"){",
                                                "        statusCode=400;",
                                                "        return;",
                                                "    }",
                                                "    pm.environment.set(\"groupsID\",item.id)",
                                                "    statusCode=200;",
                                                "})",
                                                "",
                                                "",
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(statusCode);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "protocolProfileBehavior": {
                                        "disableBodyPruning": true
                                    },
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/groups/?type=200",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "groups",
                                                ""
                                            ],
                                            "query": [{
                                                "key": "type",
                                                "value": "200"
                                            }]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/groups/?type=<string>",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "groups",
                                                    ""
                                                ],
                                                "query": [{
                                                    "key": "type",
                                                    "value": "<string>"
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "[\n  {\n    \"name\": \"laboris officia sit\",\n    \"id\": -37484479,\n    \"populated_permissions\": [\n      {\n        \"name\": \"id cul\",\n        \"codename\": \"incididunt lab\",\n        \"id\": -75692951,\n        \"types\": \"400\"\n      },\n      {\n        \"name\": \"veniam\",\n        \"codename\": \"exercitation proident elit\",\n        \"id\": -87824791,\n        \"types\": \"100\"\n      }\n    ],\n    \"type\": null,\n    \"permissions\": [\n      -63677241,\n      -25844801\n    ]\n  },\n  {\n    \"name\": \"tempor deserunt est ipsum consequat\",\n    \"id\": -34035400,\n    \"populated_permissions\": [\n      {\n        \"name\": \"ad dolore\",\n        \"codename\": \"culpa o\",\n        \"id\": 79719937,\n        \"types\": \"100\"\n      },\n      {\n        \"name\": \"id ex\",\n        \"codename\": \"in ullamco veniam adipisicing ea\",\n        \"id\": -94989500,\n        \"types\": \"100\"\n      }\n    ],\n    \"type\": null,\n    \"permissions\": [\n      -28505853,\n      -17276513\n    ]\n  }\n]"
                                    }]
                                },
                                {
                                    "name": "groups read",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/groups/{{groupsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "groups",
                                                "{{groupsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/groups/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "groups",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<integer>",
                                                    "description": "(Required) A unique integer value identifying this group."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
                                    }]
                                },
                                {
                                    "name": "groups update",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "PUT",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"{{$randomProductName}}\",\n  \"type\": \"200\",\n  \"permissions\": [\n    \"4\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/groups/{{groupsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "groups",
                                                "{{groupsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "PUT",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/groups/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "groups",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<integer>",
                                                    "description": "(Required) A unique integer value identifying this group."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
                                    }]
                                },
                                {
                                    "name": "groups partial update",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "PATCH",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"name\": \"{{$randomFirstName}}\",\n  \"type\": \"200\",\n  \"permissions\": [\n    \"2\"\n  ]\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/groups/{{groupsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "groups",
                                                "{{groupsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "PATCH",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/groups/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "groups",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<integer>",
                                                    "description": "(Required) A unique integer value identifying this group."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
                                    }]
                                },
                                {
                                    "name": "groups delete",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 204\", function () {",
                                                "    pm.response.to.have.status(204);",
                                                "});",
                                                "",
                                                "postman.setNextRequest(\"orders create\")"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/groups/{{groupsID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "groups",
                                                "{{groupsID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "DELETE",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/groups/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "groups",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<integer>",
                                                    "description": "(Required) A unique integer value identifying this group."
                                                }]
                                            }
                                        },
                                        "status": "No Content",
                                        "code": 204,
                                        "_postman_previewlanguage": "text",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }],
                                        "cookie": [],
                                        "body": ""
                                    }]
                                }
                            ]
                        }]
                    },
                    {
                        "name": "orders",
                        "item": [{
                            "name": "{id}",
                            "item": [{
                                    "name": "orders create",
                                    "event": [{
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "",
                                                    "var jsonData= JSON.parse(responseBody)",
                                                    "",
                                                    "pm.environment.set(\"ordersID\",jsonData.id);",
                                                    "",
                                                    "var statusCode ;",
                                                    "",
                                                    "",
                                                    "if(jsonData.order_number===null || jsonData.subtotal===null || jsonData.driver_count===null ||",
                                                    "   jsonData.note===\"\" ||  jsonData.tip_from_restaurant===null || jsonData.extra_tip_from_restaurant===null || jsonData.tip_from_tfr===null",
                                                    "    || jsonData.extra_tip_from_tfr === null ) {",
                                                    "        statusCode=400;",
                                                    "    }",
                                                    "    else{",
                                                    "        statusCode=201;",
                                                    "    }",
                                                    "",
                                                    "    pm.test(`Status code is ${statusCode}`, function () {",
                                                    "    pm.response.to.have.status(statusCode);",
                                                    "});",
                                                    "",
                                                    "",
                                                    "",
                                                    "",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [
                                                    "var todayDate =new Date().toLocaleString(\"tr\", {timeZone: \"Europe/Istanbul\"})",
                                                    "",
                                                    "pm.globals.set(\"nowDate\", todayDate)",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "POST",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "multipart/form-data"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "formdata",
                                            "formdata": [{
                                                    "key": "order_number",
                                                    "value": "{{$randomInt}}+\" \"+{{nowDate}}",
                                                    "description": "(Required) ",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "file",
                                                    "type": "file",
                                                    "src": "v7FyXdD7U/churn_BHVGErH.png"
                                                },
                                                {
                                                    "key": "subtotal",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "driver_count",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "pickup_date",
                                                    "value": "",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "deliver_date",
                                                    "value": "",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "delivered_date",
                                                    "value": "",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "note",
                                                    "value": "{{$randomProduct}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "tip_from_restaurant",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "extra_tip_from_restaurant",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "tip_from_tfr",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "extra_tip_from_tfr",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "restaurant",
                                                    "value": "{{restaurantsID}}",
                                                    "type": "text"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/orders/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "orders",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "POST",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/orders/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "orders",
                                                    ""
                                                ]
                                            }
                                        },
                                        "status": "Created",
                                        "code": 201,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"all_drivers\": \"amet\",\n  \"order_number\": \"culpa nostrud cillum\",\n  \"id\": \"4b1d4186-706e-e6dd-17b1-60a7f5ce70bd\",\n  \"created_by\": {\n    \"username\": \"96l__S\",\n    \"id\": 87328579\n  },\n  \"updated_by\": {\n    \"username\": \"Zqu\",\n    \"id\": -19566110\n  },\n  \"order_drivers\": [\n    {\n      \"id\": \"urn:uuid:3122bba7-32a0-278e-9df5-129ed5a1989b\",\n      \"created_by\": {\n        \"username\": \"o.\",\n        \"id\": -91606070\n      },\n      \"updated_by\": {\n        \"username\": \"3dSw\",\n        \"id\": -23431353\n      },\n      \"populated_order\": {\n        \"order_number\": \"<string>\",\n        \"id\": \"5104f4f0-3db1-31ea-ee0d-f37c7e4da21e\",\n        \"created_by\": {\n          \"username\": \"zJ_E\",\n          \"id\": 45920614\n        },\n        \"updated_by\": {\n          \"username\": \"rM2_3kCFn\",\n          \"id\": -82086965\n        },\n        \"populated_restaurant\": {\n          \"name\": \"<string>\",\n          \"users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"id\": \"b302ba3d-3632-c8aa-62e0-6cc263848f2d\",\n          \"populated_users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"is_active\": true,\n          \"deleted_at\": \"1984-02-29T22:54:42.880Z\",\n          \"address\": \"<string>\",\n          \"phone\": \"<string>\",\n          \"email\": \"<email>\",\n          \"commission\": \"<number>\",\n          \"fee\": \"<number>\"\n        },\n        \"created_at\": \"1992-04-21T06:15:56.631Z\",\n        \"updated_at\": \"1980-06-01T00:41:55.708Z\",\n        \"file\": \"https://HwtlXSbdkaDOfSUnKbRTle.lrS8iWqnfjut79kFeSKdvUYxSDWBxsk6pMJYrGSDgeDYKHg9ZWkKWoTNip4\",\n        \"subtotal\": \"<number>\",\n        \"driver_count\": \"<integer>\",\n        \"pickup_date\": \"<dateTime>\",\n        \"deliver_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"status\": null,\n        \"note\": \"<string>\",\n        \"tip_from_restaurant\": \"<number>\",\n        \"extra_tip_from_restaurant\": \"<number>\",\n        \"tip_from_tfr\": \"<number>\",\n        \"extra_tip_from_tfr\": \"<number>\",\n        \"restaurant\": \"<uuid>\"\n      },\n      \"populated_driver\": {\n        \"user\": {\n          \"username\": \"<string>\",\n          \"id\": -81448226,\n          \"password\": \"<string>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"<string>\",\n          \"groups\": [\n            \"<integer>\"\n          ],\n          \"user_permissions\": [\n            \"<integer>\"\n          ]\n        },\n        \"plate\": \"<string>\",\n        \"id\": \"urn:uuid:aa218e66-319d-7383-99d0-ee2d1169caf5\",\n        \"is_active\": true,\n        \"deleted_at\": \"1979-04-18T01:04:45.310Z\"\n      },\n      \"created_at\": \"1992-06-27T18:52:20.793Z\",\n      \"updated_at\": \"1966-10-03T17:03:19.384Z\",\n      \"status\": null,\n      \"tip\": -67672428.73340167,\n      \"received_date\": \"<dateTime>\",\n      \"delivered_date\": \"<dateTime>\",\n      \"driver\": \"<uuid>\",\n      \"order\": \"<uuid>\"\n    },\n    {\n      \"id\": \"urn:uuid:6bb52564-a378-e19a-5997-1f403b8ce00f\",\n      \"created_by\": {\n        \"username\": \"DtgKyyjR\",\n        \"id\": -24063090\n      },\n      \"updated_by\": {\n        \"username\": \"s\",\n        \"id\": 4332055\n      },\n      \"populated_order\": {\n        \"order_number\": \"<string>\",\n        \"id\": \"840d5b0e-6899-81c9-5c94-73719a2c518c\",\n        \"created_by\": {\n          \"username\": \"xknEftCH\",\n          \"id\": -52543085\n        },\n        \"updated_by\": {\n          \"username\": \"1L6\",\n          \"id\": 29119723\n        },\n        \"populated_restaurant\": {\n          \"name\": \"<string>\",\n          \"users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"id\": \"0579caad-84f6-015e-65c5-273d71e7e1aa\",\n          \"populated_users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"is_active\": true,\n          \"deleted_at\": \"1963-09-11T02:10:52.084Z\",\n          \"address\": \"<string>\",\n          \"phone\": \"<string>\",\n          \"email\": \"<email>\",\n          \"commission\": \"<number>\",\n          \"fee\": \"<number>\"\n        },\n        \"created_at\": \"1982-12-12T22:53:37.738Z\",\n        \"updated_at\": \"1982-10-15T10:36:55.462Z\",\n        \"file\": \"https://YBvvFXwoIDUMaciIBI.iujQuEx5TfSCKudrfJ7lKO.\",\n        \"subtotal\": \"<number>\",\n        \"driver_count\": \"<integer>\",\n        \"pickup_date\": \"<dateTime>\",\n        \"deliver_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"status\": null,\n        \"note\": \"<string>\",\n        \"tip_from_restaurant\": \"<number>\",\n        \"extra_tip_from_restaurant\": \"<number>\",\n        \"tip_from_tfr\": \"<number>\",\n        \"extra_tip_from_tfr\": \"<number>\",\n        \"restaurant\": \"<uuid>\"\n      },\n      \"populated_driver\": {\n        \"user\": {\n          \"username\": \"<string>\",\n          \"id\": 4614767,\n          \"password\": \"<string>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"<string>\",\n          \"groups\": [\n            \"<integer>\"\n          ],\n          \"user_permissions\": [\n            \"<integer>\"\n          ]\n        },\n        \"plate\": \"<string>\",\n        \"id\": \"25c7fe18-5e4c-118d-eb59-89f5f0770393\",\n        \"is_active\": true,\n        \"deleted_at\": \"2006-04-03T21:13:22.584Z\"\n      },\n      \"created_at\": \"2021-06-07T15:07:05.221Z\",\n      \"updated_at\": \"1968-10-21T07:03:27.550Z\",\n      \"status\": null,\n      \"tip\": -51892050.578920744,\n      \"received_date\": \"<dateTime>\",\n      \"delivered_date\": \"<dateTime>\",\n      \"driver\": \"<uuid>\",\n      \"order\": \"<uuid>\"\n    }\n  ],\n  \"populated_restaurant\": {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"3ddbe702-5d37-90b3-8b93-963e57cc5ce4\",\n    \"populated_users\": [\n      {\n        \"password\": \"cupidatat laboris deserunt Excepteu\",\n        \"username\": \"R-AFEG\",\n        \"id\": 75184409,\n        \"first_name\": \"rep\",\n        \"last_name\": \"Excepte\",\n        \"email\": \"pgwG3nQ@ZFDJcn.lv\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"magna aliquip consequat laboris eu\",\n        \"groups\": [\n          15631399,\n          -8122174\n        ],\n        \"user_permissions\": [\n          12786042,\n          56899748\n        ]\n      },\n      {\n        \"password\": \"voluptate\",\n        \"username\": \"uaYVUh\",\n        \"id\": 52607232,\n        \"first_name\": \"amet\",\n        \"last_name\": \"occaecat\",\n        \"email\": \"xmCvDcFnUFLr@mVtuzToAngppJdtfrbiozupFqx.tw\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"aliqua nulla ad\",\n        \"groups\": [\n          -67299576,\n          62487165\n        ],\n        \"user_permissions\": [\n          70788877,\n          -63202780\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"2018-05-07T14:16:38.205Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  \"created_at\": \"1956-12-22T01:47:18.352Z\",\n  \"updated_at\": \"1953-02-02T09:11:11.024Z\",\n  \"file\": \"https://DuhbUqxxuYWAwKYtsJKh.jgJRCU7RJt.vXrKluCFwc8iDkQnZpKwwQuWFalUHqla4vm\",\n  \"subtotal\": -51920515.96376843,\n  \"driver_count\": 7847249,\n  \"pickup_date\": \"1968-04-06T00:11:39.211Z\",\n  \"deliver_date\": \"2010-04-26T05:34:20.879Z\",\n  \"delivered_date\": \"1969-07-16T09:15:42.286Z\",\n  \"status\": null,\n  \"note\": \"officia in reprehenderit pariatur\",\n  \"tip_from_restaurant\": 96239224.94777331,\n  \"extra_tip_from_restaurant\": 17409659.978275597,\n  \"tip_from_tfr\": -72394827.88019203,\n  \"extra_tip_from_tfr\": 84290894.63244325,\n  \"restaurant\": \"urn:uuid:ea0ef4d3-175c-c939-bfe8-b774f27177cc\"\n}"
                                    }]
                                },
                                {
                                    "name": "orders list",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/orders/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "orders",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/orders/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "orders",
                                                    ""
                                                ]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "[\n  {\n    \"all_drivers\": \"enim esse cillum\",\n    \"order_number\": \"consequat amet\",\n    \"id\": \"a3fbc828-0007-5785-ab18-b6e85875834b\",\n    \"created_by\": {\n      \"username\": \"iF6XC7@NIe\",\n      \"id\": -21715273\n    },\n    \"updated_by\": {\n      \"username\": \"VX9a\",\n      \"id\": -46246559\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"urn:uuid:6810e97d-4241-846d-1d76-8aa01f059f0d\",\n        \"created_by\": {\n          \"username\": \"+q7Kz4xW4\",\n          \"id\": -76087779\n        },\n        \"updated_by\": {\n          \"username\": \"ala0eENzZxs\",\n          \"id\": 37388354\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:20ac35ec-ccec-885e-87ee-27861e70b362\",\n          \"created_by\": {\n            \"username\": \"At7PHx\",\n            \"id\": 86623218\n          },\n          \"updated_by\": {\n            \"username\": \"t5O1g\",\n            \"id\": 97428564\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1968-01-04T10:37:40.029Z\",\n          \"updated_at\": \"2021-02-04T10:11:19.884Z\",\n          \"file\": \"http://exsrzCXbEeySLoCNOBTrZqbXIdsSTddN.frjJOTVF.TFxCBoEISblE3.B7N2\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -6076105,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"7fd6b061-c64d-8bef-5aac-e462e336e022\",\n          \"is_active\": true,\n          \"deleted_at\": \"1995-01-21T01:38:28.074Z\"\n        },\n        \"created_at\": \"1978-10-16T09:29:51.500Z\",\n        \"updated_at\": \"1998-02-11T18:54:04.599Z\",\n        \"status\": null,\n        \"tip\": -89243878.63232069,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:be08aaf0-cb86-0549-3497-c9e85381e1c1\",\n        \"created_by\": {\n          \"username\": \"X\",\n          \"id\": -8087985\n        },\n        \"updated_by\": {\n          \"username\": \"1+4coGUJkQ\",\n          \"id\": 89778576\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:070e6730-4900-c577-50e4-b0e8e16765f7\",\n          \"created_by\": {\n            \"username\": \"@W0ZF\",\n            \"id\": 43078449\n          },\n          \"updated_by\": {\n            \"username\": \"+9MC\",\n            \"id\": 48235855\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1946-10-11T05:07:45.967Z\",\n          \"updated_at\": \"1951-08-10T15:45:26.788Z\",\n          \"file\": \"http://B.ozL5GKCddf,bWubuQKBIujEAgb686sqs\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -51788856,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"76587de6-7f0f-7767-63f8-fb9a5156b7de\",\n          \"is_active\": false,\n          \"deleted_at\": \"2008-05-23T00:42:18.484Z\"\n        },\n        \"created_at\": \"2021-12-22T01:05:15.091Z\",\n        \"updated_at\": \"2020-07-28T07:50:57.178Z\",\n        \"status\": null,\n        \"tip\": -75650363.48215152,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"urn:uuid:4550986a-138e-aa09-d95f-c6cebac1007a\",\n      \"populated_users\": [\n        {\n          \"password\": \"ipsum ad\",\n          \"username\": \"uu\",\n          \"id\": 28786051,\n          \"first_name\": \"sed\",\n          \"last_name\": \"exercitation\",\n          \"email\": \"XVBGV9z0TIdVk@BldIANQFuDnVtR.ao\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"dolor sunt\",\n          \"groups\": [\n            11164788,\n            -45486159\n          ],\n          \"user_permissions\": [\n            -2346166,\n            -66354432\n          ]\n        },\n        {\n          \"password\": \"dolore anim\",\n          \"username\": \"kytl\",\n          \"id\": -30017802,\n          \"first_name\": \"ex laboris\",\n          \"last_name\": \"voluptate\",\n          \"email\": \"9EB132aFu6WB@ZtIwcdMUhOyYeMWvuOFOvspVhnjCgs.ghfp\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"adipisicing ipsum sunt enim\",\n          \"groups\": [\n            -28763618,\n            54037605\n          ],\n          \"user_permissions\": [\n            81115764,\n            93913376\n          ]\n        }\n      ],\n      \"is_active\": true,\n      \"deleted_at\": \"1978-06-13T22:44:48.922Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1988-12-12T15:23:41.457Z\",\n    \"updated_at\": \"1955-11-02T13:01:09.355Z\",\n    \"file\": \"https://iuOyVsgpIrWWJLKN.nyuNvaiqBv5GuKyYT.vwqeQubIWd\",\n    \"subtotal\": 34303931.50911054,\n    \"driver_count\": 57071517,\n    \"pickup_date\": \"2020-05-20T23:36:02.445Z\",\n    \"deliver_date\": \"1987-05-04T04:41:04.779Z\",\n    \"delivered_date\": \"1972-02-28T02:21:29.557Z\",\n    \"status\": null,\n    \"note\": \"incididunt laborum mollit et enim\",\n    \"tip_from_restaurant\": -25084569.03614022,\n    \"extra_tip_from_restaurant\": 53245923.053400576,\n    \"tip_from_tfr\": -53496120.51090658,\n    \"extra_tip_from_tfr\": 83331965.88910216,\n    \"restaurant\": \"urn:uuid:d16b9cdf-b748-1520-ffae-7b69c5f4eafb\"\n  },\n  {\n    \"all_drivers\": \"dolore nisi\",\n    \"order_number\": \"ex Ut ut\",\n    \"id\": \"urn:uuid:6ce23477-4abd-f463-c23a-1b3d3cf32b3f\",\n    \"created_by\": {\n      \"username\": \"zCm.\",\n      \"id\": -16726826\n    },\n    \"updated_by\": {\n      \"username\": \"PON8gN\",\n      \"id\": 60332128\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"9fa701d9-dd1d-47de-1d55-e148e385907a\",\n        \"created_by\": {\n          \"username\": \"61_ixtmBww9\",\n          \"id\": 61190033\n        },\n        \"updated_by\": {\n          \"username\": \"Zj+G8I@\",\n          \"id\": 54843389\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:12a79f5f-6416-9010-dda5-c0f1a6771df7\",\n          \"created_by\": {\n            \"username\": \"mZ1\",\n            \"id\": 27931685\n          },\n          \"updated_by\": {\n            \"username\": \"ExWLSc\",\n            \"id\": 70838965\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1984-05-05T14:21:09.380Z\",\n          \"updated_at\": \"1964-09-18T00:56:18.592Z\",\n          \"file\": \"https://aFyuSzttxTzG.tmgkrI0.iNapIlV0tSsJznwmmr6lhqe9TI5KjajK2RnSQK,\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 30605811,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:40f9fcd2-9eb9-b840-d2d6-71358dc0ab23\",\n          \"is_active\": false,\n          \"deleted_at\": \"1956-04-28T13:14:52.846Z\"\n        },\n        \"created_at\": \"1966-04-22T15:41:03.882Z\",\n        \"updated_at\": \"2002-02-03T21:23:51.153Z\",\n        \"status\": null,\n        \"tip\": 87230323.61443287,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:d5e4fed2-5e4f-7341-0fbf-c1ba3c53ec81\",\n        \"created_by\": {\n          \"username\": \"24V\",\n          \"id\": 58355865\n        },\n        \"updated_by\": {\n          \"username\": \"YhQ__pb\",\n          \"id\": 86375467\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"e7d72fd8-60cc-4e5d-7029-a01080509396\",\n          \"created_by\": {\n            \"username\": \"dVLS_RcI\",\n            \"id\": 58469002\n          },\n          \"updated_by\": {\n            \"username\": \"m-U3hq@Fq\",\n            \"id\": -15281945\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1954-09-13T01:06:30.716Z\",\n          \"updated_at\": \"1962-06-13T18:54:13.828Z\",\n          \"file\": \"http://CYIAtogsyhGwsWcWlphDLHMFSr.ijI,bgpYb6CAnOi03Wfx.eMpX1upF.Pn-0PxtqbOn5GgVVyXym5QTLj68M-\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 46741035,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:04948e3d-f32b-403a-3394-273644a0d41f\",\n          \"is_active\": true,\n          \"deleted_at\": \"1985-04-05T06:19:38.664Z\"\n        },\n        \"created_at\": \"1981-01-25T16:15:23.073Z\",\n        \"updated_at\": \"2018-08-06T13:26:22.032Z\",\n        \"status\": null,\n        \"tip\": -36565679.256328434,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"da4274c7-54b2-4365-ec33-5933bbe69e91\",\n      \"populated_users\": [\n        {\n          \"password\": \"tempor id\",\n          \"username\": \"AtuI2ph\",\n          \"id\": -33411130,\n          \"first_name\": \"labore aute nostrud et consequat\",\n          \"last_name\": \"ad tempor Lorem\",\n          \"email\": \"UhwFdY2v5aODz21@okmvAFSh.fdlq\",\n          \"is_active\": true,\n          \"type\": null,\n          \"phone\": \"aliqua sint ullamco\",\n          \"groups\": [\n            -78026444,\n            21292639\n          ],\n          \"user_permissions\": [\n            -93354814,\n            55037564\n          ]\n        },\n        {\n          \"password\": \"nulla\",\n          \"username\": \"bC\",\n          \"id\": 36068443,\n          \"first_name\": \"dolore laborum dolor\",\n          \"last_name\": \"exercitation tempor ut commodo\",\n          \"email\": \"NaoyT@QyYDkhvZwDFuIE.qbzs\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"cillum aliqua officia irure enim\",\n          \"groups\": [\n            -87430794,\n            -69422303\n          ],\n          \"user_permissions\": [\n            20615723,\n            63599489\n          ]\n        }\n      ],\n      \"is_active\": false,\n      \"deleted_at\": \"1990-12-13T16:58:17.137Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1979-09-21T05:39:26.507Z\",\n    \"updated_at\": \"1950-04-17T00:42:12.900Z\",\n    \"file\": \"http://QGwooobsdEkYTncqWXkq.lhggytdfkOgezv4UcizSkzkVMtsEvGTXcYGdUUFjxW34NrS\",\n    \"subtotal\": -58946370.13684689,\n    \"driver_count\": -33269080,\n    \"pickup_date\": \"2016-03-02T06:32:52.318Z\",\n    \"deliver_date\": \"1967-02-22T10:30:44.266Z\",\n    \"delivered_date\": \"1953-04-26T22:34:17.785Z\",\n    \"status\": null,\n    \"note\": \"commodo irure et nostrud\",\n    \"tip_from_restaurant\": -32846443.222609878,\n    \"extra_tip_from_restaurant\": -44863562.6214418,\n    \"tip_from_tfr\": 28225472.466795847,\n    \"extra_tip_from_tfr\": 70951169.66399524,\n    \"restaurant\": \"d423392e-f06b-ae25-82fe-69c63725d9de\"\n  }\n]"
                                    }]
                                },
                                {
                                    "name": "orders partial update",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                "",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "PATCH",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "multipart/form-data"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "formdata",
                                            "formdata": [{
                                                    "key": "order_number",
                                                    "value": "{{randomValue}}",
                                                    "description": "(Required) ",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "file",
                                                    "type": "file",
                                                    "src": "/home/auba/Desktop/churn_BHVGErH.png"
                                                },
                                                {
                                                    "key": "subtotal",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "driver_count",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "pickup_date",
                                                    "value": "",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "deliver_date",
                                                    "value": "",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "delivered_date",
                                                    "value": "",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "note",
                                                    "value": "{{$randomProduct}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "tip_from_restaurant",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "extra_tip_from_restaurant",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "tip_from_tfr",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "extra_tip_from_tfr",
                                                    "value": "{{$randomInt}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "restaurant",
                                                    "value": "{{restaurantsID}}",
                                                    "type": "text"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/orders/{{ordersID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "orders",
                                                "{{ordersID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "PATCH",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/orders/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "orders",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this order."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"all_drivers\": \"amet\",\n  \"order_number\": \"culpa nostrud cillum\",\n  \"id\": \"4b1d4186-706e-e6dd-17b1-60a7f5ce70bd\",\n  \"created_by\": {\n    \"username\": \"96l__S\",\n    \"id\": 87328579\n  },\n  \"updated_by\": {\n    \"username\": \"Zqu\",\n    \"id\": -19566110\n  },\n  \"order_drivers\": [\n    {\n      \"id\": \"urn:uuid:3122bba7-32a0-278e-9df5-129ed5a1989b\",\n      \"created_by\": {\n        \"username\": \"o.\",\n        \"id\": -91606070\n      },\n      \"updated_by\": {\n        \"username\": \"3dSw\",\n        \"id\": -23431353\n      },\n      \"populated_order\": {\n        \"order_number\": \"<string>\",\n        \"id\": \"5104f4f0-3db1-31ea-ee0d-f37c7e4da21e\",\n        \"created_by\": {\n          \"username\": \"zJ_E\",\n          \"id\": 45920614\n        },\n        \"updated_by\": {\n          \"username\": \"rM2_3kCFn\",\n          \"id\": -82086965\n        },\n        \"populated_restaurant\": {\n          \"name\": \"<string>\",\n          \"users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"id\": \"b302ba3d-3632-c8aa-62e0-6cc263848f2d\",\n          \"populated_users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"is_active\": true,\n          \"deleted_at\": \"1984-02-29T22:54:42.880Z\",\n          \"address\": \"<string>\",\n          \"phone\": \"<string>\",\n          \"email\": \"<email>\",\n          \"commission\": \"<number>\",\n          \"fee\": \"<number>\"\n        },\n        \"created_at\": \"1992-04-21T06:15:56.631Z\",\n        \"updated_at\": \"1980-06-01T00:41:55.708Z\",\n        \"file\": \"https://HwtlXSbdkaDOfSUnKbRTle.lrS8iWqnfjut79kFeSKdvUYxSDWBxsk6pMJYrGSDgeDYKHg9ZWkKWoTNip4\",\n        \"subtotal\": \"<number>\",\n        \"driver_count\": \"<integer>\",\n        \"pickup_date\": \"<dateTime>\",\n        \"deliver_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"status\": null,\n        \"note\": \"<string>\",\n        \"tip_from_restaurant\": \"<number>\",\n        \"extra_tip_from_restaurant\": \"<number>\",\n        \"tip_from_tfr\": \"<number>\",\n        \"extra_tip_from_tfr\": \"<number>\",\n        \"restaurant\": \"<uuid>\"\n      },\n      \"populated_driver\": {\n        \"user\": {\n          \"username\": \"<string>\",\n          \"id\": -81448226,\n          \"password\": \"<string>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"<string>\",\n          \"groups\": [\n            \"<integer>\"\n          ],\n          \"user_permissions\": [\n            \"<integer>\"\n          ]\n        },\n        \"plate\": \"<string>\",\n        \"id\": \"urn:uuid:aa218e66-319d-7383-99d0-ee2d1169caf5\",\n        \"is_active\": true,\n        \"deleted_at\": \"1979-04-18T01:04:45.310Z\"\n      },\n      \"created_at\": \"1992-06-27T18:52:20.793Z\",\n      \"updated_at\": \"1966-10-03T17:03:19.384Z\",\n      \"status\": null,\n      \"tip\": -67672428.73340167,\n      \"received_date\": \"<dateTime>\",\n      \"delivered_date\": \"<dateTime>\",\n      \"driver\": \"<uuid>\",\n      \"order\": \"<uuid>\"\n    },\n    {\n      \"id\": \"urn:uuid:6bb52564-a378-e19a-5997-1f403b8ce00f\",\n      \"created_by\": {\n        \"username\": \"DtgKyyjR\",\n        \"id\": -24063090\n      },\n      \"updated_by\": {\n        \"username\": \"s\",\n        \"id\": 4332055\n      },\n      \"populated_order\": {\n        \"order_number\": \"<string>\",\n        \"id\": \"840d5b0e-6899-81c9-5c94-73719a2c518c\",\n        \"created_by\": {\n          \"username\": \"xknEftCH\",\n          \"id\": -52543085\n        },\n        \"updated_by\": {\n          \"username\": \"1L6\",\n          \"id\": 29119723\n        },\n        \"populated_restaurant\": {\n          \"name\": \"<string>\",\n          \"users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"id\": \"0579caad-84f6-015e-65c5-273d71e7e1aa\",\n          \"populated_users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"is_active\": true,\n          \"deleted_at\": \"1963-09-11T02:10:52.084Z\",\n          \"address\": \"<string>\",\n          \"phone\": \"<string>\",\n          \"email\": \"<email>\",\n          \"commission\": \"<number>\",\n          \"fee\": \"<number>\"\n        },\n        \"created_at\": \"1982-12-12T22:53:37.738Z\",\n        \"updated_at\": \"1982-10-15T10:36:55.462Z\",\n        \"file\": \"https://YBvvFXwoIDUMaciIBI.iujQuEx5TfSCKudrfJ7lKO.\",\n        \"subtotal\": \"<number>\",\n        \"driver_count\": \"<integer>\",\n        \"pickup_date\": \"<dateTime>\",\n        \"deliver_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"status\": null,\n        \"note\": \"<string>\",\n        \"tip_from_restaurant\": \"<number>\",\n        \"extra_tip_from_restaurant\": \"<number>\",\n        \"tip_from_tfr\": \"<number>\",\n        \"extra_tip_from_tfr\": \"<number>\",\n        \"restaurant\": \"<uuid>\"\n      },\n      \"populated_driver\": {\n        \"user\": {\n          \"username\": \"<string>\",\n          \"id\": 4614767,\n          \"password\": \"<string>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"<string>\",\n          \"groups\": [\n            \"<integer>\"\n          ],\n          \"user_permissions\": [\n            \"<integer>\"\n          ]\n        },\n        \"plate\": \"<string>\",\n        \"id\": \"25c7fe18-5e4c-118d-eb59-89f5f0770393\",\n        \"is_active\": true,\n        \"deleted_at\": \"2006-04-03T21:13:22.584Z\"\n      },\n      \"created_at\": \"2021-06-07T15:07:05.221Z\",\n      \"updated_at\": \"1968-10-21T07:03:27.550Z\",\n      \"status\": null,\n      \"tip\": -51892050.578920744,\n      \"received_date\": \"<dateTime>\",\n      \"delivered_date\": \"<dateTime>\",\n      \"driver\": \"<uuid>\",\n      \"order\": \"<uuid>\"\n    }\n  ],\n  \"populated_restaurant\": {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"3ddbe702-5d37-90b3-8b93-963e57cc5ce4\",\n    \"populated_users\": [\n      {\n        \"password\": \"cupidatat laboris deserunt Excepteu\",\n        \"username\": \"R-AFEG\",\n        \"id\": 75184409,\n        \"first_name\": \"rep\",\n        \"last_name\": \"Excepte\",\n        \"email\": \"pgwG3nQ@ZFDJcn.lv\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"magna aliquip consequat laboris eu\",\n        \"groups\": [\n          15631399,\n          -8122174\n        ],\n        \"user_permissions\": [\n          12786042,\n          56899748\n        ]\n      },\n      {\n        \"password\": \"voluptate\",\n        \"username\": \"uaYVUh\",\n        \"id\": 52607232,\n        \"first_name\": \"amet\",\n        \"last_name\": \"occaecat\",\n        \"email\": \"xmCvDcFnUFLr@mVtuzToAngppJdtfrbiozupFqx.tw\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"aliqua nulla ad\",\n        \"groups\": [\n          -67299576,\n          62487165\n        ],\n        \"user_permissions\": [\n          70788877,\n          -63202780\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"2018-05-07T14:16:38.205Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  \"created_at\": \"1956-12-22T01:47:18.352Z\",\n  \"updated_at\": \"1953-02-02T09:11:11.024Z\",\n  \"file\": \"https://DuhbUqxxuYWAwKYtsJKh.jgJRCU7RJt.vXrKluCFwc8iDkQnZpKwwQuWFalUHqla4vm\",\n  \"subtotal\": -51920515.96376843,\n  \"driver_count\": 7847249,\n  \"pickup_date\": \"1968-04-06T00:11:39.211Z\",\n  \"deliver_date\": \"2010-04-26T05:34:20.879Z\",\n  \"delivered_date\": \"1969-07-16T09:15:42.286Z\",\n  \"status\": null,\n  \"note\": \"officia in reprehenderit pariatur\",\n  \"tip_from_restaurant\": 96239224.94777331,\n  \"extra_tip_from_restaurant\": 17409659.978275597,\n  \"tip_from_tfr\": -72394827.88019203,\n  \"extra_tip_from_tfr\": 84290894.63244325,\n  \"restaurant\": \"urn:uuid:ea0ef4d3-175c-c939-bfe8-b774f27177cc\"\n}"
                                    }]
                                },
                                {
                                    "name": "orders read",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                "",
                                                "postman.setNextRequest(\"drivers create\");"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/orders/{{ordersID}}",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "orders",
                                                "{{ordersID}}"
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/orders/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "orders",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this order."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"all_drivers\": \"amet\",\n  \"order_number\": \"culpa nostrud cillum\",\n  \"id\": \"4b1d4186-706e-e6dd-17b1-60a7f5ce70bd\",\n  \"created_by\": {\n    \"username\": \"96l__S\",\n    \"id\": 87328579\n  },\n  \"updated_by\": {\n    \"username\": \"Zqu\",\n    \"id\": -19566110\n  },\n  \"order_drivers\": [\n    {\n      \"id\": \"urn:uuid:3122bba7-32a0-278e-9df5-129ed5a1989b\",\n      \"created_by\": {\n        \"username\": \"o.\",\n        \"id\": -91606070\n      },\n      \"updated_by\": {\n        \"username\": \"3dSw\",\n        \"id\": -23431353\n      },\n      \"populated_order\": {\n        \"order_number\": \"<string>\",\n        \"id\": \"5104f4f0-3db1-31ea-ee0d-f37c7e4da21e\",\n        \"created_by\": {\n          \"username\": \"zJ_E\",\n          \"id\": 45920614\n        },\n        \"updated_by\": {\n          \"username\": \"rM2_3kCFn\",\n          \"id\": -82086965\n        },\n        \"populated_restaurant\": {\n          \"name\": \"<string>\",\n          \"users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"id\": \"b302ba3d-3632-c8aa-62e0-6cc263848f2d\",\n          \"populated_users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"is_active\": true,\n          \"deleted_at\": \"1984-02-29T22:54:42.880Z\",\n          \"address\": \"<string>\",\n          \"phone\": \"<string>\",\n          \"email\": \"<email>\",\n          \"commission\": \"<number>\",\n          \"fee\": \"<number>\"\n        },\n        \"created_at\": \"1992-04-21T06:15:56.631Z\",\n        \"updated_at\": \"1980-06-01T00:41:55.708Z\",\n        \"file\": \"https://HwtlXSbdkaDOfSUnKbRTle.lrS8iWqnfjut79kFeSKdvUYxSDWBxsk6pMJYrGSDgeDYKHg9ZWkKWoTNip4\",\n        \"subtotal\": \"<number>\",\n        \"driver_count\": \"<integer>\",\n        \"pickup_date\": \"<dateTime>\",\n        \"deliver_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"status\": null,\n        \"note\": \"<string>\",\n        \"tip_from_restaurant\": \"<number>\",\n        \"extra_tip_from_restaurant\": \"<number>\",\n        \"tip_from_tfr\": \"<number>\",\n        \"extra_tip_from_tfr\": \"<number>\",\n        \"restaurant\": \"<uuid>\"\n      },\n      \"populated_driver\": {\n        \"user\": {\n          \"username\": \"<string>\",\n          \"id\": -81448226,\n          \"password\": \"<string>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"<string>\",\n          \"groups\": [\n            \"<integer>\"\n          ],\n          \"user_permissions\": [\n            \"<integer>\"\n          ]\n        },\n        \"plate\": \"<string>\",\n        \"id\": \"urn:uuid:aa218e66-319d-7383-99d0-ee2d1169caf5\",\n        \"is_active\": true,\n        \"deleted_at\": \"1979-04-18T01:04:45.310Z\"\n      },\n      \"created_at\": \"1992-06-27T18:52:20.793Z\",\n      \"updated_at\": \"1966-10-03T17:03:19.384Z\",\n      \"status\": null,\n      \"tip\": -67672428.73340167,\n      \"received_date\": \"<dateTime>\",\n      \"delivered_date\": \"<dateTime>\",\n      \"driver\": \"<uuid>\",\n      \"order\": \"<uuid>\"\n    },\n    {\n      \"id\": \"urn:uuid:6bb52564-a378-e19a-5997-1f403b8ce00f\",\n      \"created_by\": {\n        \"username\": \"DtgKyyjR\",\n        \"id\": -24063090\n      },\n      \"updated_by\": {\n        \"username\": \"s\",\n        \"id\": 4332055\n      },\n      \"populated_order\": {\n        \"order_number\": \"<string>\",\n        \"id\": \"840d5b0e-6899-81c9-5c94-73719a2c518c\",\n        \"created_by\": {\n          \"username\": \"xknEftCH\",\n          \"id\": -52543085\n        },\n        \"updated_by\": {\n          \"username\": \"1L6\",\n          \"id\": 29119723\n        },\n        \"populated_restaurant\": {\n          \"name\": \"<string>\",\n          \"users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"id\": \"0579caad-84f6-015e-65c5-273d71e7e1aa\",\n          \"populated_users\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"is_active\": true,\n          \"deleted_at\": \"1963-09-11T02:10:52.084Z\",\n          \"address\": \"<string>\",\n          \"phone\": \"<string>\",\n          \"email\": \"<email>\",\n          \"commission\": \"<number>\",\n          \"fee\": \"<number>\"\n        },\n        \"created_at\": \"1982-12-12T22:53:37.738Z\",\n        \"updated_at\": \"1982-10-15T10:36:55.462Z\",\n        \"file\": \"https://YBvvFXwoIDUMaciIBI.iujQuEx5TfSCKudrfJ7lKO.\",\n        \"subtotal\": \"<number>\",\n        \"driver_count\": \"<integer>\",\n        \"pickup_date\": \"<dateTime>\",\n        \"deliver_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"status\": null,\n        \"note\": \"<string>\",\n        \"tip_from_restaurant\": \"<number>\",\n        \"extra_tip_from_restaurant\": \"<number>\",\n        \"tip_from_tfr\": \"<number>\",\n        \"extra_tip_from_tfr\": \"<number>\",\n        \"restaurant\": \"<uuid>\"\n      },\n      \"populated_driver\": {\n        \"user\": {\n          \"username\": \"<string>\",\n          \"id\": 4614767,\n          \"password\": \"<string>\",\n          \"first_name\": \"<string>\",\n          \"last_name\": \"<string>\",\n          \"email\": \"<email>\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"<string>\",\n          \"groups\": [\n            \"<integer>\"\n          ],\n          \"user_permissions\": [\n            \"<integer>\"\n          ]\n        },\n        \"plate\": \"<string>\",\n        \"id\": \"25c7fe18-5e4c-118d-eb59-89f5f0770393\",\n        \"is_active\": true,\n        \"deleted_at\": \"2006-04-03T21:13:22.584Z\"\n      },\n      \"created_at\": \"2021-06-07T15:07:05.221Z\",\n      \"updated_at\": \"1968-10-21T07:03:27.550Z\",\n      \"status\": null,\n      \"tip\": -51892050.578920744,\n      \"received_date\": \"<dateTime>\",\n      \"delivered_date\": \"<dateTime>\",\n      \"driver\": \"<uuid>\",\n      \"order\": \"<uuid>\"\n    }\n  ],\n  \"populated_restaurant\": {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"3ddbe702-5d37-90b3-8b93-963e57cc5ce4\",\n    \"populated_users\": [\n      {\n        \"password\": \"cupidatat laboris deserunt Excepteu\",\n        \"username\": \"R-AFEG\",\n        \"id\": 75184409,\n        \"first_name\": \"rep\",\n        \"last_name\": \"Excepte\",\n        \"email\": \"pgwG3nQ@ZFDJcn.lv\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"magna aliquip consequat laboris eu\",\n        \"groups\": [\n          15631399,\n          -8122174\n        ],\n        \"user_permissions\": [\n          12786042,\n          56899748\n        ]\n      },\n      {\n        \"password\": \"voluptate\",\n        \"username\": \"uaYVUh\",\n        \"id\": 52607232,\n        \"first_name\": \"amet\",\n        \"last_name\": \"occaecat\",\n        \"email\": \"xmCvDcFnUFLr@mVtuzToAngppJdtfrbiozupFqx.tw\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"aliqua nulla ad\",\n        \"groups\": [\n          -67299576,\n          62487165\n        ],\n        \"user_permissions\": [\n          70788877,\n          -63202780\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"2018-05-07T14:16:38.205Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  \"created_at\": \"1956-12-22T01:47:18.352Z\",\n  \"updated_at\": \"1953-02-02T09:11:11.024Z\",\n  \"file\": \"https://DuhbUqxxuYWAwKYtsJKh.jgJRCU7RJt.vXrKluCFwc8iDkQnZpKwwQuWFalUHqla4vm\",\n  \"subtotal\": -51920515.96376843,\n  \"driver_count\": 7847249,\n  \"pickup_date\": \"1968-04-06T00:11:39.211Z\",\n  \"deliver_date\": \"2010-04-26T05:34:20.879Z\",\n  \"delivered_date\": \"1969-07-16T09:15:42.286Z\",\n  \"status\": null,\n  \"note\": \"officia in reprehenderit pariatur\",\n  \"tip_from_restaurant\": 96239224.94777331,\n  \"extra_tip_from_restaurant\": 17409659.978275597,\n  \"tip_from_tfr\": -72394827.88019203,\n  \"extra_tip_from_tfr\": 84290894.63244325,\n  \"restaurant\": \"urn:uuid:ea0ef4d3-175c-c939-bfe8-b774f27177cc\"\n}"
                                    }]
                                }
                            ]
                        }]
                    }
                ]
            },
            {
                "name": "S2",
                "item": [{
                        "name": "drivers",
                        "item": [{
                            "name": "{id}",
                            "item": [{
                                    "name": "drivers create",
                                    "event": [{
                                            "listen": "test",
                                            "script": {
                                                "exec": [
                                                    "",
                                                    "var jsonData= JSON.parse(responseBody)",
                                                    "",
                                                    "",
                                                    "pm.environment.set(\"driversID\",jsonData.id);",
                                                    "var statusCode ;",
                                                    "",
                                                    "",
                                                    "if(jsonData.user.username===\"\" || jsonData.user.password===\"\" || jsonData.user.first_name===\"\" ||",
                                                    "   jsonData.user.email===\"\" ||  jsonData.user.last_name===\"\" ||  jsonData.user.user_permissions===\"\" || jsonData.plate===\"\"||jsonData.user.groups[0]===null",
                                                    "   ) {",
                                                    "        statusCode=400;",
                                                    "    }",
                                                    "    else{",
                                                    "        statusCode=201;",
                                                    "    }",
                                                    "    pm.test(`Status code is ${statusCode}`, function () {",
                                                    "    pm.response.to.have.status(statusCode);",
                                                    "});",
                                                    "",
                                                    "postman.setNextRequest(\"drivers list\");",
                                                    "",
                                                    "",
                                                    "",
                                                    "",
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        },
                                        {
                                            "listen": "prerequest",
                                            "script": {
                                                "exec": [
                                                    ""
                                                ],
                                                "type": "text/javascript"
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "POST",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"1\"\n    ],\n    \"user_permissions\": [\n      \"3\"\n    ]\n  },\n  \"plate\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/drivers/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "drivers",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "POST",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/drivers/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "drivers",
                                                    ""
                                                ]
                                            }
                                        },
                                        "status": "Created",
                                        "code": 201,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
                                    }]
                                },
                                {
                                    "name": "drivers list",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "",
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                "",
                                                ""
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/drivers/?is_active=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "drivers",
                                                ""
                                            ],
                                            "query": [{
                                                "key": "is_active",
                                                "value": "true"
                                            }]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/drivers/?is_active=<string>",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "drivers",
                                                    ""
                                                ],
                                                "query": [{
                                                    "key": "is_active",
                                                    "value": "<string>"
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
                                    }]
                                },
                                {
                                    "name": "drivers update",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "PUT",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"1\"\n    ],\n    \"user_permissions\": [\n      \"3\"\n    ]\n  },\n  \"plate\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/drivers/{{driversID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "drivers",
                                                "{{driversID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "PUT",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/drivers/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "drivers",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this driver."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
                                    }]
                                },
                                {
                                    "name": "drivers read",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                "",
                                                "var jsonData = JSON.parse(responseBody);",
                                                "console.log(jsonData);"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/drivers/{{driversID}}",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "drivers",
                                                "{{driversID}}"
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/drivers/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "drivers",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this driver."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
                                    }]
                                },
                                {
                                    "name": "drivers delete",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});",
                                                "",
                                                "postman.setNextRequest(\"order-drivers list\");"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "DELETE",
                                        "header": [],
                                        "url": {
                                            "raw": "{{baseUrl}}/drivers/{{driversID}}",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "drivers",
                                                "{{driversID}}"
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "DELETE",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/drivers/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "drivers",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<uuid>",
                                                    "description": "(Required) A UUID string identifying this driver."
                                                }]
                                            }
                                        },
                                        "status": "No Content",
                                        "code": 204,
                                        "_postman_previewlanguage": "text",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "text/plain"
                                        }],
                                        "cookie": [],
                                        "body": ""
                                    }]
                                }
                            ]
                        }]
                    },
                    {
                        "name": "order-drivers",
                        "item": [{
                            "name": "{id}",
                            "item": [{
                                "name": "order-drivers list",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "postman.setNextRequest(\"users create\");"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "GET",
                                    "header": [{
                                        "key": "Accept",
                                        "value": "application/json"
                                    }],
                                    "url": {
                                        "raw": "{{baseUrl}}/order-drivers/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "order-drivers",
                                            ""
                                        ]
                                    }
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/order-drivers/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "order-drivers",
                                                ""
                                            ]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "[\n  {\n    \"id\": \"urn:uuid:2c636f5c-7c62-8dda-5235-36048c109939\",\n    \"created_by\": {\n      \"username\": \"EZhUl1C\",\n      \"id\": 5894165\n    },\n    \"updated_by\": {\n      \"username\": \"MQyZwCkyVYa\",\n      \"id\": 51784775\n    },\n    \"populated_order\": {\n      \"order_number\": \"labore dolore\",\n      \"id\": \"719c254d-4682-a321-1f12-b5c656eb6248\",\n      \"created_by\": {\n        \"username\": \"H\",\n        \"id\": 20601673\n      },\n      \"updated_by\": {\n        \"username\": \"9YxxAYKy\",\n        \"id\": 60596643\n      },\n      \"populated_restaurant\": {\n        \"name\": \"aliqua nisi\",\n        \"users\": [\n          -21866045,\n          -19098260\n        ],\n        \"id\": \"a0e15e8e-cffc-627e-40e8-7ff6cef1e45c\",\n        \"populated_users\": [\n          {\n            \"password\": \"mollit e\",\n            \"username\": \"9fME0R\",\n            \"id\": -99475593,\n            \"first_name\": \"velit in aliqua\",\n            \"last_name\": \"elit sunt of\",\n            \"email\": \"QDQ2IekuT4iCj@tjzGjmeKGdBhTpshrLOUvlkzApV.fth\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"incididunt ullamco\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"password\": \"in voluptate sed\",\n            \"username\": \"mCC9OP\",\n            \"id\": 88316494,\n            \"first_name\": \"in sint anim\",\n            \"last_name\": \"deserunt aliquip\",\n            \"email\": \"LO7y@nCkogqDWPKkVPBFtewQLzlvr.tkqn\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"eu\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"is_active\": true,\n        \"deleted_at\": \"1982-09-30T22:44:00.311Z\",\n        \"address\": \"adipisicing nulla labore\",\n        \"phone\": \"in Excepteur aute dolor\",\n        \"email\": \"am-pi4GCKj0nw@slhFmvFVe.qdeq\",\n        \"commission\": -70618368.14640915,\n        \"fee\": -28214392.900176316\n      },\n      \"created_at\": \"1991-05-17T12:18:22.788Z\",\n      \"updated_at\": \"2010-09-02T12:55:32.663Z\",\n      \"file\": \"https://RluFJYmayQsGNZRUFDGhJegIzMt.oxngOE+zh5ycZ1jb5jYZiazxr2DVCW,KxqSWkWrabe1CT.b3E1TZqWLcRhGP49XL+KCzaFqf\",\n      \"subtotal\": -95692702.3884294,\n      \"driver_count\": -65376968,\n      \"pickup_date\": \"1993-08-23T00:03:50.209Z\",\n      \"deliver_date\": \"1965-01-02T06:31:38.245Z\",\n      \"delivered_date\": \"2008-08-19T11:02:47.083Z\",\n      \"status\": null,\n      \"note\": \"veniam minim\",\n      \"tip_from_restaurant\": 1717012.9096554518,\n      \"extra_tip_from_restaurant\": -30388146.091600806,\n      \"tip_from_tfr\": -60710977.7656301,\n      \"extra_tip_from_tfr\": 78325557.40168145,\n      \"restaurant\": \"urn:uuid:dca739f3-4233-71bc-7006-933f76edb79e\"\n    },\n    \"populated_driver\": {\n      \"user\": {\n        \"username\": \"<string>\",\n        \"id\": -40356398,\n        \"password\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"<string>\",\n        \"groups\": [\n          \"<integer>\"\n        ],\n        \"user_permissions\": [\n          \"<integer>\"\n        ]\n      },\n      \"plate\": \"<string>\",\n      \"id\": \"urn:uuid:fd2fcb5e-5a10-a566-4e4e-9e6f59753a27\",\n      \"is_active\": true,\n      \"deleted_at\": \"1966-02-26T20:35:24.149Z\"\n    },\n    \"created_at\": \"2009-12-12T08:53:54.531Z\",\n    \"updated_at\": \"1979-08-03T04:36:05.942Z\",\n    \"status\": null,\n    \"tip\": -75696482.61170708,\n    \"received_date\": \"1987-09-16T04:12:35.357Z\",\n    \"delivered_date\": \"1950-04-04T04:07:03.721Z\",\n    \"driver\": \"urn:uuid:605303c5-aa44-77b6-8246-1f25520402ee\",\n    \"order\": \"urn:uuid:ff2e6fe9-1883-c4fc-05d1-66f6e67bdb0c\"\n  },\n  {\n    \"id\": \"urn:uuid:bef346a5-ddd5-9114-627a-77cb4478af38\",\n    \"created_by\": {\n      \"username\": \"cYLfAGnP\",\n      \"id\": -23678134\n    },\n    \"updated_by\": {\n      \"username\": \"mSA9s\",\n      \"id\": 26589983\n    },\n    \"populated_order\": {\n      \"order_number\": \"nisi et qui consequat veniam\",\n      \"id\": \"8e105479-1c57-0671-2d45-91ec394256f8\",\n      \"created_by\": {\n        \"username\": \"qS\",\n        \"id\": 82228204\n      },\n      \"updated_by\": {\n        \"username\": \"U\",\n        \"id\": 66369139\n      },\n      \"populated_restaurant\": {\n        \"name\": \"ipsum dolore quis laborum\",\n        \"users\": [\n          28650660,\n          82125872\n        ],\n        \"id\": \"c1bdde10-cff3-589a-6d94-4f7539d2bdea\",\n        \"populated_users\": [\n          {\n            \"password\": \"pariatur labore\",\n            \"username\": \"V\",\n            \"id\": -45775188,\n            \"first_name\": \"exerci\",\n            \"last_name\": \"velit amet eu a\",\n            \"email\": \"6lhXxXeVoJS@WMJAYJEPnmdkDG.ml\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"minim ut elit\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"password\": \"aliqua\",\n            \"username\": \"lI-awm-j\",\n            \"id\": 28956551,\n            \"first_name\": \"aliqua sint amet pariatur\",\n            \"last_name\": \"ut veniam sed fugiat id\",\n            \"email\": \"iltC90I63Ks@OEHpFHEwaZdT.vykk\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"in anim\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"is_active\": false,\n        \"deleted_at\": \"1961-01-24T03:24:53.276Z\",\n        \"address\": \"culpa sunt adipisicing voluptate id\",\n        \"phone\": \"minim esse\",\n        \"email\": \"P7yZTxusNcfiS@ezbURWwhEW.egi\",\n        \"commission\": 86074290.1979985,\n        \"fee\": -92989066.2724914\n      },\n      \"created_at\": \"1984-05-08T07:19:04.355Z\",\n      \"updated_at\": \"1977-02-12T01:05:14.657Z\",\n      \"file\": \"http://fvQsRanCka.kuch1KAPqvdyMk.PAZKTC,PjBXSUJjAuf0kkurtzQCvpVllM7IoawDTztxc3p.Vylj,G\",\n      \"subtotal\": -92888930.0071079,\n      \"driver_count\": 44333633,\n      \"pickup_date\": \"2007-04-03T17:20:59.814Z\",\n      \"deliver_date\": \"1958-11-05T08:56:07.653Z\",\n      \"delivered_date\": \"1964-11-13T00:29:03.580Z\",\n      \"status\": null,\n      \"note\": \"elit sit laboris nisi labore\",\n      \"tip_from_restaurant\": -16644346.451371074,\n      \"extra_tip_from_restaurant\": -3796625.966103792,\n      \"tip_from_tfr\": -33975067.92292431,\n      \"extra_tip_from_tfr\": 76309176.2338131,\n      \"restaurant\": \"urn:uuid:6472ca2a-5ef0-5e28-2532-0866d0a278ad\"\n    },\n    \"populated_driver\": {\n      \"user\": {\n        \"username\": \"<string>\",\n        \"id\": 81313353,\n        \"password\": \"<string>\",\n        \"first_name\": \"<string>\",\n        \"last_name\": \"<string>\",\n        \"email\": \"<email>\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"<string>\",\n        \"groups\": [\n          \"<integer>\"\n        ],\n        \"user_permissions\": [\n          \"<integer>\"\n        ]\n      },\n      \"plate\": \"<string>\",\n      \"id\": \"32d0f91a-176b-c865-9006-955d5d4936d7\",\n      \"is_active\": false,\n      \"deleted_at\": \"2021-01-06T08:06:05.501Z\"\n    },\n    \"created_at\": \"1944-09-14T01:32:25.751Z\",\n    \"updated_at\": \"1949-02-27T00:14:26.423Z\",\n    \"status\": null,\n    \"tip\": -54985195.03185584,\n    \"received_date\": \"2007-10-17T03:41:00.806Z\",\n    \"delivered_date\": \"1991-10-16T19:19:15.784Z\",\n    \"driver\": \"e3ad6aad-5266-2afc-5b98-16b102734e15\",\n    \"order\": \"urn:uuid:bcab264d-0801-79ba-5873-1c3650c21642\"\n  }\n]"
                                }]
                            }]
                        }]
                    },
                    {
                        "name": "users",
                        "item": [{
                            "name": "{id}",
                            "item": [{
                                    "name": "users create",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "var jsonData = JSON.parse(responseBody);",
                                                "",
                                                "    pm.environment.set(\"userID\",jsonData.id);",
                                                "    pm.environment.set(\"UserMail\",jsonData.email)",
                                                "",
                                                "var statusCode;",
                                                "console.log(jsonData)",
                                                "",
                                                "if(jsonData.username===\"\" || jsonData.first_name===\"\"|| jsonData.last_name === \"\"|| jsonData.email===\"\" || jsonData.type===null|| jsonData.phone===\"\"",
                                                "|| jsonData.groups[0]===null || jsonData.user_permissions[0]===null){",
                                                "    statusCode=400;",
                                                "}",
                                                "else{",
                                                "    statusCode=201",
                                                "}",
                                                "",
                                                "pm.test(`Status code is ${statusCode}`, function () {",
                                                "    pm.response.to.have.status(statusCode);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "POST",
                                        "header": [{
                                                "key": "Content-Type",
                                                "value": "multipart/form-data"
                                            },
                                            {
                                                "key": "Accept",
                                                "value": "application/json"
                                            }
                                        ],
                                        "body": {
                                            "mode": "formdata",
                                            "formdata": [{
                                                    "key": "password",
                                                    "value": "{{$randomPassword}}",
                                                    "description": "(Required) ",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "username",
                                                    "value": "{{$randomUserName}}",
                                                    "description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "first_name",
                                                    "value": "{{$randomFirstName}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "last_name",
                                                    "value": "{{$randomLastName}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "email",
                                                    "value": "{{$randomEmail}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "type",
                                                    "value": "200",
                                                    "description": " (This can only be one of 100,200,300,400)",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "phone",
                                                    "value": "{{$randomPhoneNumber}}",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "groups",
                                                    "value": "{{groupsID}}",
                                                    "description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                                                    "type": "text"
                                                },
                                                {
                                                    "key": "user_permissions",
                                                    "value": "{{randomValue}}",
                                                    "description": "Specific permissions for this user.",
                                                    "type": "text"
                                                }
                                            ]
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/users/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "POST",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/users/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "users",
                                                    ""
                                                ]
                                            }
                                        },
                                        "status": "Created",
                                        "code": 201,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
                                    }]
                                },
                                {
                                    "name": "users list",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/?type=200&is_active=true",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                ""
                                            ],
                                            "query": [{
                                                    "key": "type",
                                                    "value": "200"
                                                },
                                                {
                                                    "key": "is_active",
                                                    "value": "true"
                                                }
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/users/?type=<string>&is_active=<string>",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "users",
                                                    ""
                                                ],
                                                "query": [{
                                                        "key": "type",
                                                        "value": "<string>"
                                                    },
                                                    {
                                                        "key": "is_active",
                                                        "value": "<string>"
                                                    }
                                                ]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "[\n  {\n    \"password\": \"in amet occaecat deserunt ex\",\n    \"username\": \"orMFH\",\n    \"id\": -82681630,\n    \"first_name\": \"magna Excepte\",\n    \"last_name\": \"esse ex quis amet\",\n    \"email\": \"ZzW9k3IfRRDV@FjRlMvwAbEzMHPBR.yqv\",\n    \"is_active\": true,\n    \"type\": null,\n    \"phone\": \"esse laboris ad Duis quis\",\n    \"groups\": [\n      -36781097,\n      -28289421\n    ],\n    \"user_permissions\": [\n      58208337,\n      26457233\n    ]\n  },\n  {\n    \"password\": \"mollit laboris ea esse\",\n    \"username\": \"aDZ1y5\",\n    \"id\": 99242148,\n    \"first_name\": \"in enim dolor\",\n    \"last_name\": \"sint velit incididunt\",\n    \"email\": \"xN10jh@ktyuwOAHZPXALRUb.bm\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"nulla quis deserunt\",\n    \"groups\": [\n      -10220552,\n      18245819\n    ],\n    \"user_permissions\": [\n      96841996,\n      13221883\n    ]\n  }\n]"
                                    }]
                                },
                                {
                                    "name": "users read",
                                    "event": [{
                                        "listen": "test",
                                        "script": {
                                            "exec": [
                                                "pm.test(\"Status code is 200\", function () {",
                                                "    pm.response.to.have.status(200);",
                                                "});"
                                            ],
                                            "type": "text/javascript"
                                        }
                                    }],
                                    "request": {
                                        "auth": {
                                            "type": "bearer",
                                            "bearer": [{
                                                "key": "token",
                                                "value": "{{access}}",
                                                "type": "string"
                                            }]
                                        },
                                        "method": "GET",
                                        "header": [{
                                            "key": "Accept",
                                            "value": "application/json"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/users/{{userID}}/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "users",
                                                "{{userID}}",
                                                ""
                                            ]
                                        }
                                    },
                                    "response": [{
                                        "name": "Untitled Example",
                                        "originalRequest": {
                                            "method": "GET",
                                            "header": [{
                                                "description": "Added as a part of security scheme: apikey",
                                                "key": "Authorization",
                                                "value": "<API Key>"
                                            }],
                                            "url": {
                                                "raw": "{{baseUrl}}/users/:id/",
                                                "host": [
                                                    "{{baseUrl}}"
                                                ],
                                                "path": [
                                                    "users",
                                                    ":id",
                                                    ""
                                                ],
                                                "variable": [{
                                                    "key": "id",
                                                    "value": "<integer>",
                                                    "description": "(Required) A unique integer value identifying this user."
                                                }]
                                            }
                                        },
                                        "status": "OK",
                                        "code": 200,
                                        "_postman_previewlanguage": "json",
                                        "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        }],
                                        "cookie": [],
                                        "body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
                                    }]
                                }
                            ]
                        }]
                    }
                ]
            },
            {
                "name": "S3",
                "item": [{
                        "name": "password-reset",
                        "item": [{
                                "name": "An Api View which provides a method to request a password reset token based on an e-mail address",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "POST",
                                    "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        },
                                        {
                                            "key": "Accept",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": {
                                        "mode": "raw",
                                        "raw": "{\n  \"email\": \"{{UserMail}}\"\n}",
                                        "options": {
                                            "raw": {
                                                "language": "json"
                                            }
                                        }
                                    },
                                    "url": {
                                        "raw": "{{baseUrl}}/password-reset/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "password-reset",
                                            ""
                                        ]
                                    },
                                    "description": "Sends a signal reset_password_token_created when a reset token was created"
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"email\": \"<email>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/password-reset/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "password-reset",
                                                ""
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "{\n  \"email\": \"<email>\"\n}"
                                }]
                            },
                            {
                                "name": "password-reset confirm create",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "POST",
                                    "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        },
                                        {
                                            "key": "Accept",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": {
                                        "mode": "raw",
                                        "raw": "{\n  \"password\": \"{{$randomPassword}}\",\n  \"token\": \"{{access}}\"\n}",
                                        "options": {
                                            "raw": {
                                                "language": "json"
                                            }
                                        }
                                    },
                                    "url": {
                                        "raw": "{{baseUrl}}/password-reset/confirm/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "password-reset",
                                            "confirm",
                                            ""
                                        ]
                                    },
                                    "description": "An Api View which provides a method to reset a password based on a unique token"
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"password\": \"<string>\",\n  \"token\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/password-reset/confirm/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "password-reset",
                                                "confirm",
                                                ""
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "{\n  \"password\": \"<string>\",\n  \"token\": \"<string>\"\n}"
                                }]
                            },
                            {
                                "name": "password-reset validate token create",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "postman.setNextRequest(\"permissions list\");"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "POST",
                                    "header": [{
                                            "key": "Content-Type",
                                            "value": "application/json"
                                        },
                                        {
                                            "key": "Accept",
                                            "value": "application/json"
                                        }
                                    ],
                                    "body": {
                                        "mode": "raw",
                                        "raw": "{\n  \"token\": \"{{access}}\"\n}",
                                        "options": {
                                            "raw": {
                                                "language": "json"
                                            }
                                        }
                                    },
                                    "url": {
                                        "raw": "{{baseUrl}}/password-reset/validate_token/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "password-reset",
                                            "validate_token",
                                            ""
                                        ]
                                    },
                                    "description": "An Api View which provides a method to verify that a token is valid"
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "POST",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "body": {
                                            "mode": "raw",
                                            "raw": "{\n  \"token\": \"<string>\"\n}",
                                            "options": {
                                                "raw": {
                                                    "language": "json"
                                                }
                                            }
                                        },
                                        "url": {
                                            "raw": "{{baseUrl}}/password-reset/validate_token/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "password-reset",
                                                "validate_token",
                                                ""
                                            ]
                                        }
                                    },
                                    "status": "Created",
                                    "code": 201,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "{\n  \"token\": \"<string>\"\n}"
                                }]
                            }
                        ]
                    },
                    {
                        "name": "permissions",
                        "item": [{
                                "name": "permissions list",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "GET",
                                    "header": [{
                                        "key": "Accept",
                                        "value": "application/json"
                                    }],
                                    "url": {
                                        "raw": "{{baseUrl}}/permissions/?type={{randomValue}}",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "permissions",
                                            ""
                                        ],
                                        "query": [{
                                            "key": "type",
                                            "value": "{{randomValue}}"
                                        }]
                                    }
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/permissions/?type=<number>",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "permissions",
                                                ""
                                            ],
                                            "query": [{
                                                "key": "type",
                                                "value": "<number>"
                                            }]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "[\n  {\n    \"name\": \"ipsum qui proident incididunt\",\n    \"codename\": \"culpa sint aliquip ut\",\n    \"id\": -91614423,\n    \"types\": \"300\"\n  },\n  {\n    \"name\": \"sit\",\n    \"codename\": \"commodo\",\n    \"id\": -23990809,\n    \"types\": \"400\"\n  }\n]"
                                }]
                            },
                            {
                                "name": "permissions read",
                                "event": [{
                                    "listen": "test",
                                    "script": {
                                        "exec": [
                                            "pm.test(\"Status code is 200\", function () {",
                                            "    pm.response.to.have.status(200);",
                                            "});",
                                            "",
                                            "postman.setNextRequest(\"dispatch\");"
                                        ],
                                        "type": "text/javascript"
                                    }
                                }],
                                "request": {
                                    "auth": {
                                        "type": "bearer",
                                        "bearer": [{
                                            "key": "token",
                                            "value": "{{access}}",
                                            "type": "string"
                                        }]
                                    },
                                    "method": "GET",
                                    "header": [{
                                        "key": "Accept",
                                        "value": "application/json"
                                    }],
                                    "url": {
                                        "raw": "{{baseUrl}}/permissions/{{randomValue}}/",
                                        "host": [
                                            "{{baseUrl}}"
                                        ],
                                        "path": [
                                            "permissions",
                                            "{{randomValue}}",
                                            ""
                                        ]
                                    }
                                },
                                "response": [{
                                    "name": "Untitled Example",
                                    "originalRequest": {
                                        "method": "GET",
                                        "header": [{
                                            "description": "Added as a part of security scheme: apikey",
                                            "key": "Authorization",
                                            "value": "<API Key>"
                                        }],
                                        "url": {
                                            "raw": "{{baseUrl}}/permissions/:id/",
                                            "host": [
                                                "{{baseUrl}}"
                                            ],
                                            "path": [
                                                "permissions",
                                                ":id",
                                                ""
                                            ],
                                            "variable": [{
                                                "key": "id",
                                                "value": "<integer>",
                                                "description": "(Required) A unique integer value identifying this permission."
                                            }]
                                        }
                                    },
                                    "status": "OK",
                                    "code": 200,
                                    "_postman_previewlanguage": "json",
                                    "header": [{
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }],
                                    "cookie": [],
                                    "body": "{\n  \"name\": \"adipisicing ame\",\n  \"codename\": \"exercitation reprehenderit\",\n  \"id\": 13660199,\n  \"types\": \"400\"\n}"
                                }]
                            }
                        ]
                    },
                    {
                        "name": "dispatch",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "POST",
                            "header": [],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n  \"order\": \"{{ordersID}}\",\n  \"drivers\": [\n    \"{{driversID}}\",\n    \"{{driversID}}\"\n  ]\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{baseUrl}}/dispatch",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "dispatch"
                                ]
                            }
                        },
                        "response": []
                    },
                    {
                        "name": "admin-dashboard list",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                                "raw": "{{baseUrl}}/admin-dashboard",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "admin-dashboard"
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "GET",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "url": {
                                    "raw": "{{baseUrl}}/admin-dashboard",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "admin-dashboard"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [{
                                "key": "Content-Type",
                                "value": "text/plain"
                            }],
                            "cookie": [],
                            "body": ""
                        }]
                    },
                    {
                        "name": "driver-dashboard list",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                                "raw": "{{baseUrl}}/driver-dashboard",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "driver-dashboard"
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "GET",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "url": {
                                    "raw": "{{baseUrl}}/driver-dashboard",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "driver-dashboard"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [{
                                "key": "Content-Type",
                                "value": "text/plain"
                            }],
                            "cookie": [],
                            "body": ""
                        }]
                    },
                    {
                        "name": "driver-report create",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "POST",
                            "header": [{
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n  \"driver\": \"{{driversID}}\",\n  \"start_date\": \"2022-07-04T21:52:57.811Z\",\n  \"end_date\": \"2022-07-04T21:52:57.811Z\",\n  \"status\": \"200\"\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{baseUrl}}/driver-report",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "driver-report"
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "POST",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"driver\": \"<string>\",\n  \"start_date\": \"<string>\",\n  \"end_date\": \"<string>\",\n  \"status\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/driver-report",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "driver-report"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [{
                                "key": "Content-Type",
                                "value": "application/json"
                            }],
                            "cookie": [],
                            "body": "{\n  \"driver\": \"laborum veniam et id eu\",\n  \"start_date\": \"in tempor voluptate exercitation\",\n  \"end_date\": \"adipisicing Excepteur dolore\",\n  \"status\": \"labore magna nulla\"\n}"
                        }]
                    },
                    {
                        "name": "order-drivers-status partial update",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "PATCH",
                            "header": [{
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n  \"status\": \"500\"\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{baseUrl}}/order-drivers-status/{{orderDriversID}}/",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "order-drivers-status",
                                    "{{orderDriversID}}",
                                    ""
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"status\": \"<integer>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/order-drivers-status/:id/",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "order-drivers-status",
                                        ":id",
                                        ""
                                    ],
                                    "variable": [{
                                        "key": "id",
                                        "value": "<uuid>",
                                        "description": "(Required) A UUID string identifying this order driver."
                                    }]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [{
                                "key": "Content-Type",
                                "value": "application/json"
                            }],
                            "cookie": [],
                            "body": "{\n  \"status\": \"<integer>\",\n  \"id\": \"urn:uuid:286878e8-e2f6-38e6-a16e-45194ccb24f5\",\n  \"order\": \"urn:uuid:4b759776-b328-7af8-5bac-f74a9108f74e\",\n  \"driver\": \"934c28e9-b2ee-4062-e9ea-87538c913d1f\",\n  \"created_by\": {\n    \"username\": \"xh\",\n    \"id\": 98509485\n  },\n  \"updated_by\": {\n    \"username\": \"B\",\n    \"id\": 61841947\n  },\n  \"received_date\": \"1997-10-25T08:00:04.687Z\",\n  \"delivered_date\": \"1964-01-09T23:10:07.621Z\"\n}"
                        }]
                    },
                    {
                        "name": "order-report create",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "POST",
                            "header": [{
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n  \"restaurant\": \"{{restaurantsID}}\",\n \"start_date\": \"2000-11-11\",\n  \"end_date\": \"2001-11-11\",\n  \"status\": \"1000\"\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{baseUrl}}/order-report",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "order-report"
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "POST",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"restaurant\": \"<string>\",\n  \"start_date\": \"<string>\",\n  \"end_date\": \"<string>\",\n  \"status\": \"<string>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/order-report",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "order-report"
                                    ]
                                }
                            },
                            "status": "Created",
                            "code": 201,
                            "_postman_previewlanguage": "json",
                            "header": [{
                                "key": "Content-Type",
                                "value": "application/json"
                            }],
                            "cookie": [],
                            "body": "{\n  \"restaurant\": \"ea\",\n  \"start_date\": \"veniam\",\n  \"end_date\": \"dolor Excepteur in minim\",\n  \"status\": \"dolore Excepteur\"\n}"
                        }]
                    },
                    {
                        "name": "order-status partial update",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "PATCH",
                            "header": [{
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "key": "Accept",
                                    "value": "application/json"
                                }
                            ],
                            "body": {
                                "mode": "raw",
                                "raw": "{\n  \"status\": \"6000\"\n}",
                                "options": {
                                    "raw": {
                                        "language": "json"
                                    }
                                }
                            },
                            "url": {
                                "raw": "{{baseUrl}}/order-status/{{ordersID}}/",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "order-status",
                                    "{{ordersID}}",
                                    ""
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "PATCH",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"status\": \"<integer>\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                },
                                "url": {
                                    "raw": "{{baseUrl}}/order-status/:id/",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "order-status",
                                        ":id",
                                        ""
                                    ],
                                    "variable": [{
                                        "key": "id",
                                        "value": "<uuid>",
                                        "description": "(Required) A UUID string identifying this order."
                                    }]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "header": [{
                                "key": "Content-Type",
                                "value": "application/json"
                            }],
                            "cookie": [],
                            "body": "{\n  \"status\": \"<integer>\",\n  \"id\": \"6dde1780-b742-3e41-f7dd-fba3cce6df87\",\n  \"order\": \"0f9f7214-c78b-e232-7a5b-921a1177789d\",\n  \"driver\": \"urn:uuid:eb2f52d0-eab4-5a7e-347d-2525741ca5ae\",\n  \"created_by\": {\n    \"username\": \"Un7A\",\n    \"id\": -13543173\n  },\n  \"updated_by\": {\n    \"username\": \"sKzlllbc4\",\n    \"id\": 7989590\n  }\n}"
                        }]
                    },
                    {
                        "name": "restaurant-dashboard list",
                        "event": [{
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }],
                        "request": {
                            "auth": {
                                "type": "bearer",
                                "bearer": [{
                                    "key": "token",
                                    "value": "{{access}}",
                                    "type": "string"
                                }]
                            },
                            "method": "GET",
                            "header": [],
                            "url": {
                                "raw": "{{baseUrl}}/restaurant-dashboard",
                                "host": [
                                    "{{baseUrl}}"
                                ],
                                "path": [
                                    "restaurant-dashboard"
                                ]
                            }
                        },
                        "response": [{
                            "name": "Untitled Example",
                            "originalRequest": {
                                "method": "GET",
                                "header": [{
                                    "description": "Added as a part of security scheme: apikey",
                                    "key": "Authorization",
                                    "value": "<API Key>"
                                }],
                                "url": {
                                    "raw": "{{baseUrl}}/restaurant-dashboard",
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "path": [
                                        "restaurant-dashboard"
                                    ]
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "text",
                            "header": [{
                                "key": "Content-Type",
                                "value": "text/plain"
                            }],
                            "cookie": [],
                            "body": ""
                        }]
                    }
                ]
            }
        ]
    }],
    "auth": {
        "type": "apikey",
        "apikey": [{
                "key": "key",
                "value": "Authorization",
                "type": "string"
            },
            {
                "key": "value",
                "value": "<API Key>",
                "type": "string"
            },
            {
                "key": "in",
                "value": "header",
                "type": "string"
            }
        ]
    },
    "variable": [{
        "key": "baseUrl",
        "value": "http://134.122.118.186/api/v1",
        "type": "string"
    }]
}