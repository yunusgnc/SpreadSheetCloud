{
	"info": {
		"_postman_id": "e36bedbc-9903-4f81-91c8-d1c570ec0705",
		"name": "Scenario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12017285"
	},
	"item": [
		{
			"name": "S1 - driver tests (with admin user)",
			"item": [
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/token/",
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData= JSON.parse(responseBody)",
									"console.log(jsonData.id)",
									"pm.environment.set(\"driversID\",jsonData.id)",
									"var statusCode ;",
									"",
									"",
									"if(jsonData.user.username===\"\" || jsonData.user.password===\"\" || jsonData.user.first_name===\"\" ||",
									"   jsonData.user.email===\"\" ||  jsonData.user.last_name===\"\" ||  jsonData.user.user_permissions===\"\" || jsonData.plate===\"\"||jsonData.user.groups[0]===null",
									"   ) {",
									"        statusCode=400;",
									"    }",
									"    else{",
									"        statusCode=201;",
									"    }",
									"    pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									" var passwordLength = 12;\r",
									" var password = \"\";\r",
									"  for (var i = 0; i <= passwordLength; i++) {\r",
									"   var randomNumber = Math.floor(Math.random() * chars.length);\r",
									"   password += chars.substring(randomNumber, randomNumber +1);\r",
									"  }\r",
									"\r",
									"pm.globals.set(\"randPass\",password);\r",
									"\r",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
									"\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());\r",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());\r",
									"\r",
									" //random-value\r",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{randomMail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "/drivers/",
									"path": [
										"drivers",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"console.log(jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "token create Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									" var passwordLength = 12;\r",
									" var password = \"\";\r",
									"  for (var i = 0; i <= passwordLength; i++) {\r",
									"   var randomNumber = Math.floor(Math.random() * chars.length);\r",
									"   password += chars.substring(randomNumber, randomNumber +1);\r",
									"  }\r",
									"\r",
									"pm.globals.set(\"randPass\",password);\r",
									"\r",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
									"\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());\r",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());\r",
									"\r",
									" //random-value\r",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{randomMail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "drivers delete Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "token create Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "S2 - driver tests (with restaurant user)",
			"item": [
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "token create with restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"restaurant\",\n    \"password\": \"restaurant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode=403;",
									"",
									"    pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\npm.globals.set(\"randomValue\",myRandomNumber);",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "drivers read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "S3 - driver tests (with driver)",
			"item": [
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "token create with driver",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"driver\",\n    \"password\": \"driver\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"    pm.test(`Status code is ${201}`, function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${403}`, function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${403}`, function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${200}`, function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "S4 - driver tests (with office user)",
			"item": [
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "token create with office",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"office\",\n    \"password\": \"office\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${403}`, function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${403}`, function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user\": {\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"groups\": [\n      \"{{groupsID}}\"\n    ],\n    \"user_permissions\": [\n      \"{{randomValue}}\"\n    ]\n  },\n  \"note\": \"{{$randomCreditCardMask}} {{$randomCountryCode}} {{$randomCreditCardMask}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${403}`, function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/{{driversID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								"{{driversID}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this driver."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"user\": {\n    \"username\": \"<string>\",\n    \"id\": -42972170,\n    \"password\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<email>\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"<string>\",\n    \"groups\": [\n      \"<integer>\"\n    ],\n    \"user_permissions\": [\n      \"<integer>\"\n    ]\n  },\n  \"plate\": \"<string>\",\n  \"id\": \"urn:uuid:bd05cd2f-006d-2a8b-044e-7bdb3821299f\",\n  \"is_active\": true,\n  \"deleted_at\": \"1951-10-24T13:23:04.021Z\"\n}"
						}
					]
				},
				{
					"name": "drivers list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"    pm.test(`Status code is ${403}`, function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "S5 - restaurant tests (with admin user)",
			"item": [
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "users create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var statusCode;",
									"console.log(jsonData)",
									"",
									"pm.globals.set(\"userName\",jsonData.username);",
									"",
									"if(jsonData.username===\"\" || jsonData.first_name===\"\"|| jsonData.last_name === \"\"|| jsonData.email===\"\" || jsonData.type===null|| jsonData.phone===\"\"",
									"|| jsonData.groups[0]===null || jsonData.user_permissions[0]===null){",
									"    statusCode=400;",
									"}",
									"else{",
									"    statusCode=201",
									"}",
									"",
									"pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
									" var passwordLength = 12;",
									" var password = \"\";",
									"  for (var i = 0; i <= passwordLength; i++) {",
									"   var randomNumber = Math.floor(Math.random() * chars.length);",
									"   password += chars.substring(randomNumber, randomNumber +1);",
									"  }",
									"",
									"pm.globals.set(\"randPass\",password);",
									"",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")",
									"",
									" pm.globals.set(\"randomMail\", email.toLowerCase());",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());",
									"",
									" //random-value",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									"",
									"let type = [200,300,400];",
									"",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;",
									"",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "300",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "users list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/?type=200&is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "200"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/?type=<string>&is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"password\": \"in amet occaecat deserunt ex\",\n    \"username\": \"orMFH\",\n    \"id\": -82681630,\n    \"first_name\": \"magna Excepte\",\n    \"last_name\": \"esse ex quis amet\",\n    \"email\": \"ZzW9k3IfRRDV@FjRlMvwAbEzMHPBR.yqv\",\n    \"is_active\": true,\n    \"type\": null,\n    \"phone\": \"esse laboris ad Duis quis\",\n    \"groups\": [\n      -36781097,\n      -28289421\n    ],\n    \"user_permissions\": [\n      58208337,\n      26457233\n    ]\n  },\n  {\n    \"password\": \"mollit laboris ea esse\",\n    \"username\": \"aDZ1y5\",\n    \"id\": 99242148,\n    \"first_name\": \"in enim dolor\",\n    \"last_name\": \"sint velit incididunt\",\n    \"email\": \"xN10jh@ktyuwOAHZPXALRUb.bm\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"nulla quis deserunt\",\n    \"groups\": [\n      -10220552,\n      18245819\n    ],\n    \"user_permissions\": [\n      96841996,\n      13221883\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "users update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
									"\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());\r",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());\r",
									"\r",
									" //random-value\r",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "{{randType}}",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "users list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/?type=200&is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "200"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/?type=<string>&is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"password\": \"in amet occaecat deserunt ex\",\n    \"username\": \"orMFH\",\n    \"id\": -82681630,\n    \"first_name\": \"magna Excepte\",\n    \"last_name\": \"esse ex quis amet\",\n    \"email\": \"ZzW9k3IfRRDV@FjRlMvwAbEzMHPBR.yqv\",\n    \"is_active\": true,\n    \"type\": null,\n    \"phone\": \"esse laboris ad Duis quis\",\n    \"groups\": [\n      -36781097,\n      -28289421\n    ],\n    \"user_permissions\": [\n      58208337,\n      26457233\n    ]\n  },\n  {\n    \"password\": \"mollit laboris ea esse\",\n    \"username\": \"aDZ1y5\",\n    \"id\": 99242148,\n    \"first_name\": \"in enim dolor\",\n    \"last_name\": \"sint velit incididunt\",\n    \"email\": \"xN10jh@ktyuwOAHZPXALRUb.bm\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"nulla quis deserunt\",\n    \"groups\": [\n      -10220552,\n      18245819\n    ],\n    \"user_permissions\": [\n      96841996,\n      13221883\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "users partial update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "{{randType}}",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "users read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "restaurants create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants partial update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants list Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants delete Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "restaurants read Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "users delete Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "token create Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "S6- restaurant tests (with restaurant user)",
			"item": [
				{
					"name": "token create admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "restaurants create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData= JSON.parse(responseBody)",
									"pm.environment.set(\"restaurantsID\",jsonData.id)",
									"",
									"var statusCode ;",
									"",
									"if(jsonData.name===\"\" || jsonData.users===\"\" || jsonData.address===\"\" || jsonData.email===\"\" ||  jsonData.phone===null ",
									"    || jsonData.commission===null || jsonData.fee===null",
									"   ) {",
									"        statusCode=400;",
									"    }",
									"    else{",
									"        statusCode=201;",
									"    }",
									"    pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "users create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"userID\", jsonData.id)",
									"",
									"var statusCode;",
									"console.log(jsonData)",
									"",
									"pm.globals.set(\"userName\",jsonData.username);",
									"",
									"if(jsonData.username===\"\" || jsonData.first_name===\"\"|| jsonData.last_name === \"\"|| jsonData.email===\"\" || jsonData.type===null|| jsonData.phone===\"\"",
									"|| jsonData.groups[0]===null || jsonData.user_permissions[0]===null){",
									"    statusCode=400;",
									"}",
									"else{",
									"    statusCode=201",
									"}",
									"",
									"pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
									" var passwordLength = 12;",
									" var password = \"\";",
									"  for (var i = 0; i <= passwordLength; i++) {",
									"   var randomNumber = Math.floor(Math.random() * chars.length);",
									"   password += chars.substring(randomNumber, randomNumber +1);",
									"  }",
									"",
									"pm.globals.set(\"randPass\",password);",
									"",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")",
									"",
									" pm.globals.set(\"randomMail\", email.toLowerCase());",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());",
									"",
									" //random-value",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									"",
									"let type = [200,300,400];",
									"",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;",
									"",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "300",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "users read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "token create restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "orders list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://134.122.118.186/api/v1/orders/",
							"protocol": "http",
							"host": [
								"134",
								"122",
								"118",
								"186"
							],
							"path": [
								"api",
								"v1",
								"orders",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"all_drivers\": \"enim esse cillum\",\n    \"order_number\": \"consequat amet\",\n    \"id\": \"a3fbc828-0007-5785-ab18-b6e85875834b\",\n    \"created_by\": {\n      \"username\": \"iF6XC7@NIe\",\n      \"id\": -21715273\n    },\n    \"updated_by\": {\n      \"username\": \"VX9a\",\n      \"id\": -46246559\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"urn:uuid:6810e97d-4241-846d-1d76-8aa01f059f0d\",\n        \"created_by\": {\n          \"username\": \"+q7Kz4xW4\",\n          \"id\": -76087779\n        },\n        \"updated_by\": {\n          \"username\": \"ala0eENzZxs\",\n          \"id\": 37388354\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:20ac35ec-ccec-885e-87ee-27861e70b362\",\n          \"created_by\": {\n            \"username\": \"At7PHx\",\n            \"id\": 86623218\n          },\n          \"updated_by\": {\n            \"username\": \"t5O1g\",\n            \"id\": 97428564\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1968-01-04T10:37:40.029Z\",\n          \"updated_at\": \"2021-02-04T10:11:19.884Z\",\n          \"file\": \"http://exsrzCXbEeySLoCNOBTrZqbXIdsSTddN.frjJOTVF.TFxCBoEISblE3.B7N2\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -6076105,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"7fd6b061-c64d-8bef-5aac-e462e336e022\",\n          \"is_active\": true,\n          \"deleted_at\": \"1995-01-21T01:38:28.074Z\"\n        },\n        \"created_at\": \"1978-10-16T09:29:51.500Z\",\n        \"updated_at\": \"1998-02-11T18:54:04.599Z\",\n        \"status\": null,\n        \"tip\": -89243878.63232069,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:be08aaf0-cb86-0549-3497-c9e85381e1c1\",\n        \"created_by\": {\n          \"username\": \"X\",\n          \"id\": -8087985\n        },\n        \"updated_by\": {\n          \"username\": \"1+4coGUJkQ\",\n          \"id\": 89778576\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:070e6730-4900-c577-50e4-b0e8e16765f7\",\n          \"created_by\": {\n            \"username\": \"@W0ZF\",\n            \"id\": 43078449\n          },\n          \"updated_by\": {\n            \"username\": \"+9MC\",\n            \"id\": 48235855\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1946-10-11T05:07:45.967Z\",\n          \"updated_at\": \"1951-08-10T15:45:26.788Z\",\n          \"file\": \"http://B.ozL5GKCddf,bWubuQKBIujEAgb686sqs\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -51788856,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"76587de6-7f0f-7767-63f8-fb9a5156b7de\",\n          \"is_active\": false,\n          \"deleted_at\": \"2008-05-23T00:42:18.484Z\"\n        },\n        \"created_at\": \"2021-12-22T01:05:15.091Z\",\n        \"updated_at\": \"2020-07-28T07:50:57.178Z\",\n        \"status\": null,\n        \"tip\": -75650363.48215152,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"urn:uuid:4550986a-138e-aa09-d95f-c6cebac1007a\",\n      \"populated_users\": [\n        {\n          \"password\": \"ipsum ad\",\n          \"username\": \"uu\",\n          \"id\": 28786051,\n          \"first_name\": \"sed\",\n          \"last_name\": \"exercitation\",\n          \"email\": \"XVBGV9z0TIdVk@BldIANQFuDnVtR.ao\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"dolor sunt\",\n          \"groups\": [\n            11164788,\n            -45486159\n          ],\n          \"user_permissions\": [\n            -2346166,\n            -66354432\n          ]\n        },\n        {\n          \"password\": \"dolore anim\",\n          \"username\": \"kytl\",\n          \"id\": -30017802,\n          \"first_name\": \"ex laboris\",\n          \"last_name\": \"voluptate\",\n          \"email\": \"9EB132aFu6WB@ZtIwcdMUhOyYeMWvuOFOvspVhnjCgs.ghfp\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"adipisicing ipsum sunt enim\",\n          \"groups\": [\n            -28763618,\n            54037605\n          ],\n          \"user_permissions\": [\n            81115764,\n            93913376\n          ]\n        }\n      ],\n      \"is_active\": true,\n      \"deleted_at\": \"1978-06-13T22:44:48.922Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1988-12-12T15:23:41.457Z\",\n    \"updated_at\": \"1955-11-02T13:01:09.355Z\",\n    \"file\": \"https://iuOyVsgpIrWWJLKN.nyuNvaiqBv5GuKyYT.vwqeQubIWd\",\n    \"subtotal\": 34303931.50911054,\n    \"driver_count\": 57071517,\n    \"pickup_date\": \"2020-05-20T23:36:02.445Z\",\n    \"deliver_date\": \"1987-05-04T04:41:04.779Z\",\n    \"delivered_date\": \"1972-02-28T02:21:29.557Z\",\n    \"status\": null,\n    \"note\": \"incididunt laborum mollit et enim\",\n    \"tip_from_restaurant\": -25084569.03614022,\n    \"extra_tip_from_restaurant\": 53245923.053400576,\n    \"tip_from_tfr\": -53496120.51090658,\n    \"extra_tip_from_tfr\": 83331965.88910216,\n    \"restaurant\": \"urn:uuid:d16b9cdf-b748-1520-ffae-7b69c5f4eafb\"\n  },\n  {\n    \"all_drivers\": \"dolore nisi\",\n    \"order_number\": \"ex Ut ut\",\n    \"id\": \"urn:uuid:6ce23477-4abd-f463-c23a-1b3d3cf32b3f\",\n    \"created_by\": {\n      \"username\": \"zCm.\",\n      \"id\": -16726826\n    },\n    \"updated_by\": {\n      \"username\": \"PON8gN\",\n      \"id\": 60332128\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"9fa701d9-dd1d-47de-1d55-e148e385907a\",\n        \"created_by\": {\n          \"username\": \"61_ixtmBww9\",\n          \"id\": 61190033\n        },\n        \"updated_by\": {\n          \"username\": \"Zj+G8I@\",\n          \"id\": 54843389\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:12a79f5f-6416-9010-dda5-c0f1a6771df7\",\n          \"created_by\": {\n            \"username\": \"mZ1\",\n            \"id\": 27931685\n          },\n          \"updated_by\": {\n            \"username\": \"ExWLSc\",\n            \"id\": 70838965\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1984-05-05T14:21:09.380Z\",\n          \"updated_at\": \"1964-09-18T00:56:18.592Z\",\n          \"file\": \"https://aFyuSzttxTzG.tmgkrI0.iNapIlV0tSsJznwmmr6lhqe9TI5KjajK2RnSQK,\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 30605811,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:40f9fcd2-9eb9-b840-d2d6-71358dc0ab23\",\n          \"is_active\": false,\n          \"deleted_at\": \"1956-04-28T13:14:52.846Z\"\n        },\n        \"created_at\": \"1966-04-22T15:41:03.882Z\",\n        \"updated_at\": \"2002-02-03T21:23:51.153Z\",\n        \"status\": null,\n        \"tip\": 87230323.61443287,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:d5e4fed2-5e4f-7341-0fbf-c1ba3c53ec81\",\n        \"created_by\": {\n          \"username\": \"24V\",\n          \"id\": 58355865\n        },\n        \"updated_by\": {\n          \"username\": \"YhQ__pb\",\n          \"id\": 86375467\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"e7d72fd8-60cc-4e5d-7029-a01080509396\",\n          \"created_by\": {\n            \"username\": \"dVLS_RcI\",\n            \"id\": 58469002\n          },\n          \"updated_by\": {\n            \"username\": \"m-U3hq@Fq\",\n            \"id\": -15281945\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1954-09-13T01:06:30.716Z\",\n          \"updated_at\": \"1962-06-13T18:54:13.828Z\",\n          \"file\": \"http://CYIAtogsyhGwsWcWlphDLHMFSr.ijI,bgpYb6CAnOi03Wfx.eMpX1upF.Pn-0PxtqbOn5GgVVyXym5QTLj68M-\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 46741035,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:04948e3d-f32b-403a-3394-273644a0d41f\",\n          \"is_active\": true,\n          \"deleted_at\": \"1985-04-05T06:19:38.664Z\"\n        },\n        \"created_at\": \"1981-01-25T16:15:23.073Z\",\n        \"updated_at\": \"2018-08-06T13:26:22.032Z\",\n        \"status\": null,\n        \"tip\": -36565679.256328434,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"da4274c7-54b2-4365-ec33-5933bbe69e91\",\n      \"populated_users\": [\n        {\n          \"password\": \"tempor id\",\n          \"username\": \"AtuI2ph\",\n          \"id\": -33411130,\n          \"first_name\": \"labore aute nostrud et consequat\",\n          \"last_name\": \"ad tempor Lorem\",\n          \"email\": \"UhwFdY2v5aODz21@okmvAFSh.fdlq\",\n          \"is_active\": true,\n          \"type\": null,\n          \"phone\": \"aliqua sint ullamco\",\n          \"groups\": [\n            -78026444,\n            21292639\n          ],\n          \"user_permissions\": [\n            -93354814,\n            55037564\n          ]\n        },\n        {\n          \"password\": \"nulla\",\n          \"username\": \"bC\",\n          \"id\": 36068443,\n          \"first_name\": \"dolore laborum dolor\",\n          \"last_name\": \"exercitation tempor ut commodo\",\n          \"email\": \"NaoyT@QyYDkhvZwDFuIE.qbzs\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"cillum aliqua officia irure enim\",\n          \"groups\": [\n            -87430794,\n            -69422303\n          ],\n          \"user_permissions\": [\n            20615723,\n            63599489\n          ]\n        }\n      ],\n      \"is_active\": false,\n      \"deleted_at\": \"1990-12-13T16:58:17.137Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1979-09-21T05:39:26.507Z\",\n    \"updated_at\": \"1950-04-17T00:42:12.900Z\",\n    \"file\": \"http://QGwooobsdEkYTncqWXkq.lhggytdfkOgezv4UcizSkzkVMtsEvGTXcYGdUUFjxW34NrS\",\n    \"subtotal\": -58946370.13684689,\n    \"driver_count\": -33269080,\n    \"pickup_date\": \"2016-03-02T06:32:52.318Z\",\n    \"deliver_date\": \"1967-02-22T10:30:44.266Z\",\n    \"delivered_date\": \"1953-04-26T22:34:17.785Z\",\n    \"status\": null,\n    \"note\": \"commodo irure et nostrud\",\n    \"tip_from_restaurant\": -32846443.222609878,\n    \"extra_tip_from_restaurant\": -44863562.6214418,\n    \"tip_from_tfr\": 28225472.466795847,\n    \"extra_tip_from_tfr\": 70951169.66399524,\n    \"restaurant\": \"d423392e-f06b-ae25-82fe-69c63725d9de\"\n  }\n]"
						}
					]
				},
				{
					"name": "users list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/?type=200&is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "200"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/?type=<string>&is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"password\": \"in amet occaecat deserunt ex\",\n    \"username\": \"orMFH\",\n    \"id\": -82681630,\n    \"first_name\": \"magna Excepte\",\n    \"last_name\": \"esse ex quis amet\",\n    \"email\": \"ZzW9k3IfRRDV@FjRlMvwAbEzMHPBR.yqv\",\n    \"is_active\": true,\n    \"type\": null,\n    \"phone\": \"esse laboris ad Duis quis\",\n    \"groups\": [\n      -36781097,\n      -28289421\n    ],\n    \"user_permissions\": [\n      58208337,\n      26457233\n    ]\n  },\n  {\n    \"password\": \"mollit laboris ea esse\",\n    \"username\": \"aDZ1y5\",\n    \"id\": 99242148,\n    \"first_name\": \"in enim dolor\",\n    \"last_name\": \"sint velit incididunt\",\n    \"email\": \"xN10jh@ktyuwOAHZPXALRUb.bm\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"nulla quis deserunt\",\n    \"groups\": [\n      -10220552,\n      18245819\n    ],\n    \"user_permissions\": [\n      96841996,\n      13221883\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "users update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
									"\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());\r",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());\r",
									"\r",
									" //random-value\r",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;\r",
									"pm.globals.set(\"randomValue\",myRandomNumber);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "{{randType}}",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "restaurants partial update Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "users partial update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "{{randType}}",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "restaurants delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "restaurants list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "users delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "token create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "S7- restaurant tests (with driver user)",
			"item": [
				{
					"name": "token create admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "restaurants list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "users create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"userID\", jsonData.id)",
									"",
									"var statusCode;",
									"console.log(jsonData)",
									"",
									"pm.globals.set(\"userName\",jsonData.username);",
									"",
									"if(jsonData.username===\"\" || jsonData.first_name===\"\"|| jsonData.last_name === \"\"|| jsonData.email===\"\" || jsonData.type===null|| jsonData.phone===\"\"",
									"|| jsonData.groups[0]===null || jsonData.user_permissions[0]===null){",
									"    statusCode=400;",
									"}",
									"else{",
									"    statusCode=201",
									"}",
									"",
									"pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
									" var passwordLength = 12;",
									" var password = \"\";",
									"  for (var i = 0; i <= passwordLength; i++) {",
									"   var randomNumber = Math.floor(Math.random() * chars.length);",
									"   password += chars.substring(randomNumber, randomNumber +1);",
									"  }",
									"",
									"pm.globals.set(\"randPass\",password);",
									"",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")",
									"",
									" pm.globals.set(\"randomMail\", email.toLowerCase());",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());",
									"",
									" //random-value",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									"",
									"let type = [200,300,400];",
									"",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;",
									"",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "400",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "users read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "token create driver",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "orders list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://134.122.118.186/api/v1/orders/",
							"protocol": "http",
							"host": [
								"134",
								"122",
								"118",
								"186"
							],
							"path": [
								"api",
								"v1",
								"orders",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"all_drivers\": \"enim esse cillum\",\n    \"order_number\": \"consequat amet\",\n    \"id\": \"a3fbc828-0007-5785-ab18-b6e85875834b\",\n    \"created_by\": {\n      \"username\": \"iF6XC7@NIe\",\n      \"id\": -21715273\n    },\n    \"updated_by\": {\n      \"username\": \"VX9a\",\n      \"id\": -46246559\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"urn:uuid:6810e97d-4241-846d-1d76-8aa01f059f0d\",\n        \"created_by\": {\n          \"username\": \"+q7Kz4xW4\",\n          \"id\": -76087779\n        },\n        \"updated_by\": {\n          \"username\": \"ala0eENzZxs\",\n          \"id\": 37388354\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:20ac35ec-ccec-885e-87ee-27861e70b362\",\n          \"created_by\": {\n            \"username\": \"At7PHx\",\n            \"id\": 86623218\n          },\n          \"updated_by\": {\n            \"username\": \"t5O1g\",\n            \"id\": 97428564\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1968-01-04T10:37:40.029Z\",\n          \"updated_at\": \"2021-02-04T10:11:19.884Z\",\n          \"file\": \"http://exsrzCXbEeySLoCNOBTrZqbXIdsSTddN.frjJOTVF.TFxCBoEISblE3.B7N2\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -6076105,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"7fd6b061-c64d-8bef-5aac-e462e336e022\",\n          \"is_active\": true,\n          \"deleted_at\": \"1995-01-21T01:38:28.074Z\"\n        },\n        \"created_at\": \"1978-10-16T09:29:51.500Z\",\n        \"updated_at\": \"1998-02-11T18:54:04.599Z\",\n        \"status\": null,\n        \"tip\": -89243878.63232069,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:be08aaf0-cb86-0549-3497-c9e85381e1c1\",\n        \"created_by\": {\n          \"username\": \"X\",\n          \"id\": -8087985\n        },\n        \"updated_by\": {\n          \"username\": \"1+4coGUJkQ\",\n          \"id\": 89778576\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:070e6730-4900-c577-50e4-b0e8e16765f7\",\n          \"created_by\": {\n            \"username\": \"@W0ZF\",\n            \"id\": 43078449\n          },\n          \"updated_by\": {\n            \"username\": \"+9MC\",\n            \"id\": 48235855\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1946-10-11T05:07:45.967Z\",\n          \"updated_at\": \"1951-08-10T15:45:26.788Z\",\n          \"file\": \"http://B.ozL5GKCddf,bWubuQKBIujEAgb686sqs\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -51788856,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"76587de6-7f0f-7767-63f8-fb9a5156b7de\",\n          \"is_active\": false,\n          \"deleted_at\": \"2008-05-23T00:42:18.484Z\"\n        },\n        \"created_at\": \"2021-12-22T01:05:15.091Z\",\n        \"updated_at\": \"2020-07-28T07:50:57.178Z\",\n        \"status\": null,\n        \"tip\": -75650363.48215152,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"urn:uuid:4550986a-138e-aa09-d95f-c6cebac1007a\",\n      \"populated_users\": [\n        {\n          \"password\": \"ipsum ad\",\n          \"username\": \"uu\",\n          \"id\": 28786051,\n          \"first_name\": \"sed\",\n          \"last_name\": \"exercitation\",\n          \"email\": \"XVBGV9z0TIdVk@BldIANQFuDnVtR.ao\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"dolor sunt\",\n          \"groups\": [\n            11164788,\n            -45486159\n          ],\n          \"user_permissions\": [\n            -2346166,\n            -66354432\n          ]\n        },\n        {\n          \"password\": \"dolore anim\",\n          \"username\": \"kytl\",\n          \"id\": -30017802,\n          \"first_name\": \"ex laboris\",\n          \"last_name\": \"voluptate\",\n          \"email\": \"9EB132aFu6WB@ZtIwcdMUhOyYeMWvuOFOvspVhnjCgs.ghfp\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"adipisicing ipsum sunt enim\",\n          \"groups\": [\n            -28763618,\n            54037605\n          ],\n          \"user_permissions\": [\n            81115764,\n            93913376\n          ]\n        }\n      ],\n      \"is_active\": true,\n      \"deleted_at\": \"1978-06-13T22:44:48.922Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1988-12-12T15:23:41.457Z\",\n    \"updated_at\": \"1955-11-02T13:01:09.355Z\",\n    \"file\": \"https://iuOyVsgpIrWWJLKN.nyuNvaiqBv5GuKyYT.vwqeQubIWd\",\n    \"subtotal\": 34303931.50911054,\n    \"driver_count\": 57071517,\n    \"pickup_date\": \"2020-05-20T23:36:02.445Z\",\n    \"deliver_date\": \"1987-05-04T04:41:04.779Z\",\n    \"delivered_date\": \"1972-02-28T02:21:29.557Z\",\n    \"status\": null,\n    \"note\": \"incididunt laborum mollit et enim\",\n    \"tip_from_restaurant\": -25084569.03614022,\n    \"extra_tip_from_restaurant\": 53245923.053400576,\n    \"tip_from_tfr\": -53496120.51090658,\n    \"extra_tip_from_tfr\": 83331965.88910216,\n    \"restaurant\": \"urn:uuid:d16b9cdf-b748-1520-ffae-7b69c5f4eafb\"\n  },\n  {\n    \"all_drivers\": \"dolore nisi\",\n    \"order_number\": \"ex Ut ut\",\n    \"id\": \"urn:uuid:6ce23477-4abd-f463-c23a-1b3d3cf32b3f\",\n    \"created_by\": {\n      \"username\": \"zCm.\",\n      \"id\": -16726826\n    },\n    \"updated_by\": {\n      \"username\": \"PON8gN\",\n      \"id\": 60332128\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"9fa701d9-dd1d-47de-1d55-e148e385907a\",\n        \"created_by\": {\n          \"username\": \"61_ixtmBww9\",\n          \"id\": 61190033\n        },\n        \"updated_by\": {\n          \"username\": \"Zj+G8I@\",\n          \"id\": 54843389\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:12a79f5f-6416-9010-dda5-c0f1a6771df7\",\n          \"created_by\": {\n            \"username\": \"mZ1\",\n            \"id\": 27931685\n          },\n          \"updated_by\": {\n            \"username\": \"ExWLSc\",\n            \"id\": 70838965\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1984-05-05T14:21:09.380Z\",\n          \"updated_at\": \"1964-09-18T00:56:18.592Z\",\n          \"file\": \"https://aFyuSzttxTzG.tmgkrI0.iNapIlV0tSsJznwmmr6lhqe9TI5KjajK2RnSQK,\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 30605811,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:40f9fcd2-9eb9-b840-d2d6-71358dc0ab23\",\n          \"is_active\": false,\n          \"deleted_at\": \"1956-04-28T13:14:52.846Z\"\n        },\n        \"created_at\": \"1966-04-22T15:41:03.882Z\",\n        \"updated_at\": \"2002-02-03T21:23:51.153Z\",\n        \"status\": null,\n        \"tip\": 87230323.61443287,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:d5e4fed2-5e4f-7341-0fbf-c1ba3c53ec81\",\n        \"created_by\": {\n          \"username\": \"24V\",\n          \"id\": 58355865\n        },\n        \"updated_by\": {\n          \"username\": \"YhQ__pb\",\n          \"id\": 86375467\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"e7d72fd8-60cc-4e5d-7029-a01080509396\",\n          \"created_by\": {\n            \"username\": \"dVLS_RcI\",\n            \"id\": 58469002\n          },\n          \"updated_by\": {\n            \"username\": \"m-U3hq@Fq\",\n            \"id\": -15281945\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1954-09-13T01:06:30.716Z\",\n          \"updated_at\": \"1962-06-13T18:54:13.828Z\",\n          \"file\": \"http://CYIAtogsyhGwsWcWlphDLHMFSr.ijI,bgpYb6CAnOi03Wfx.eMpX1upF.Pn-0PxtqbOn5GgVVyXym5QTLj68M-\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 46741035,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:04948e3d-f32b-403a-3394-273644a0d41f\",\n          \"is_active\": true,\n          \"deleted_at\": \"1985-04-05T06:19:38.664Z\"\n        },\n        \"created_at\": \"1981-01-25T16:15:23.073Z\",\n        \"updated_at\": \"2018-08-06T13:26:22.032Z\",\n        \"status\": null,\n        \"tip\": -36565679.256328434,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"da4274c7-54b2-4365-ec33-5933bbe69e91\",\n      \"populated_users\": [\n        {\n          \"password\": \"tempor id\",\n          \"username\": \"AtuI2ph\",\n          \"id\": -33411130,\n          \"first_name\": \"labore aute nostrud et consequat\",\n          \"last_name\": \"ad tempor Lorem\",\n          \"email\": \"UhwFdY2v5aODz21@okmvAFSh.fdlq\",\n          \"is_active\": true,\n          \"type\": null,\n          \"phone\": \"aliqua sint ullamco\",\n          \"groups\": [\n            -78026444,\n            21292639\n          ],\n          \"user_permissions\": [\n            -93354814,\n            55037564\n          ]\n        },\n        {\n          \"password\": \"nulla\",\n          \"username\": \"bC\",\n          \"id\": 36068443,\n          \"first_name\": \"dolore laborum dolor\",\n          \"last_name\": \"exercitation tempor ut commodo\",\n          \"email\": \"NaoyT@QyYDkhvZwDFuIE.qbzs\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"cillum aliqua officia irure enim\",\n          \"groups\": [\n            -87430794,\n            -69422303\n          ],\n          \"user_permissions\": [\n            20615723,\n            63599489\n          ]\n        }\n      ],\n      \"is_active\": false,\n      \"deleted_at\": \"1990-12-13T16:58:17.137Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1979-09-21T05:39:26.507Z\",\n    \"updated_at\": \"1950-04-17T00:42:12.900Z\",\n    \"file\": \"http://QGwooobsdEkYTncqWXkq.lhggytdfkOgezv4UcizSkzkVMtsEvGTXcYGdUUFjxW34NrS\",\n    \"subtotal\": -58946370.13684689,\n    \"driver_count\": -33269080,\n    \"pickup_date\": \"2016-03-02T06:32:52.318Z\",\n    \"deliver_date\": \"1967-02-22T10:30:44.266Z\",\n    \"delivered_date\": \"1953-04-26T22:34:17.785Z\",\n    \"status\": null,\n    \"note\": \"commodo irure et nostrud\",\n    \"tip_from_restaurant\": -32846443.222609878,\n    \"extra_tip_from_restaurant\": -44863562.6214418,\n    \"tip_from_tfr\": 28225472.466795847,\n    \"extra_tip_from_tfr\": 70951169.66399524,\n    \"restaurant\": \"d423392e-f06b-ae25-82fe-69c63725d9de\"\n  }\n]"
						}
					]
				},
				{
					"name": "users list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/?type=200&is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "200"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/?type=<string>&is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"password\": \"in amet occaecat deserunt ex\",\n    \"username\": \"orMFH\",\n    \"id\": -82681630,\n    \"first_name\": \"magna Excepte\",\n    \"last_name\": \"esse ex quis amet\",\n    \"email\": \"ZzW9k3IfRRDV@FjRlMvwAbEzMHPBR.yqv\",\n    \"is_active\": true,\n    \"type\": null,\n    \"phone\": \"esse laboris ad Duis quis\",\n    \"groups\": [\n      -36781097,\n      -28289421\n    ],\n    \"user_permissions\": [\n      58208337,\n      26457233\n    ]\n  },\n  {\n    \"password\": \"mollit laboris ea esse\",\n    \"username\": \"aDZ1y5\",\n    \"id\": 99242148,\n    \"first_name\": \"in enim dolor\",\n    \"last_name\": \"sint velit incididunt\",\n    \"email\": \"xN10jh@ktyuwOAHZPXALRUb.bm\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"nulla quis deserunt\",\n    \"groups\": [\n      -10220552,\n      18245819\n    ],\n    \"user_permissions\": [\n      96841996,\n      13221883\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants partial update Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "groups create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let rndm = Math.floor(Math.random() * (40 - 1 + 1)) + 1;\r",
									"\r",
									"pm.globals.set(\"randomPermission\",rndm);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"{{randType}}\",\n  \"permissions\": [\n    \"{{randomPermission}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let rndm = Math.floor(Math.random() * (40 - 1 + 1)) + 1;\r",
									"\r",
									"pm.globals.set(\"randomPermission\",rndm);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"{{randType}}\",\n  \"permissions\": [\n    \"{{randomPermission}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups partial update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let rndm = Math.floor(Math.random() * (40 - 1 + 1)) + 1;\r",
									"\r",
									"pm.globals.set(\"randomPermission\",rndm);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"{{randType}}\",\n  \"permissions\": [\n    \"{{randomPermission}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "users delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "token create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myRandomNumber = Math.floor(Math.random() * (47-1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "S8- restaurant tests (with office user)",
			"item": [
				{
					"name": "token create admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "users create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"userID\", jsonData.id)",
									"",
									"var statusCode;",
									"console.log(jsonData)",
									"",
									"pm.globals.set(\"userName\",jsonData.username);",
									"",
									"if(jsonData.username===\"\" || jsonData.first_name===\"\"|| jsonData.last_name === \"\"|| jsonData.email===\"\" || jsonData.type===null|| jsonData.phone===\"\"",
									"|| jsonData.groups[0]===null || jsonData.user_permissions[0]===null){",
									"    statusCode=400;",
									"}",
									"else{",
									"    statusCode=201",
									"}",
									"",
									"pm.test(`Status code is ${statusCode}`, function () {",
									"    pm.response.to.have.status(statusCode);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var chars = \"0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()ABCDEFGHIJKLMNOPQRSTUVWXYZ\";",
									" var passwordLength = 12;",
									" var password = \"\";",
									"  for (var i = 0; i <= passwordLength; i++) {",
									"   var randomNumber = Math.floor(Math.random() * chars.length);",
									"   password += chars.substring(randomNumber, randomNumber +1);",
									"  }",
									"",
									"pm.globals.set(\"randPass\",password);",
									"",
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")",
									"let username = pm.variables.replaceIn(\"{{$randomUserName}}\")",
									"",
									" pm.globals.set(\"randomMail\", email.toLowerCase());",
									" pm.globals.set(\"randomUserName\",username.toLowerCase());",
									"",
									" //random-value",
									"var myRandomNumber = Math.floor(Math.random() * (47-1+1))+1;",
									"pm.globals.set(\"randomValue\",myRandomNumber);",
									"",
									"let type = [200,300,400];",
									"",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;",
									"",
									"pm.globals.set(\"randType\",type[rndm])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"value": "{{randPass}}",
									"description": "(Required) ",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{randomUserName}}",
									"description": "(Required) Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "{{$randomFirstName}}",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "{{$randomLastName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{randomMail}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "200",
									"description": " (This can only be one of 100,200,300,400)",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "{{$randomPhoneNumber}}",
									"type": "text"
								},
								{
									"key": "groups",
									"value": "{{groupsID}}",
									"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.",
									"type": "text"
								},
								{
									"key": "user_permissions",
									"value": "{{randomValue}}",
									"description": "Specific permissions for this user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "users read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"password\": \"sint et dolor\",\n  \"username\": \"AvU\",\n  \"id\": -48654971,\n  \"first_name\": \"adipisicing proident culpa incididunt et\",\n  \"last_name\": \"tempor do\",\n  \"email\": \"kGkh-yvuK6ky3@OqFJxPntUKVyFw.ig\",\n  \"is_active\": true,\n  \"type\": null,\n  \"phone\": \"ea aliqua\",\n  \"groups\": [\n    28656,\n    90153880\n  ],\n  \"user_permissions\": [\n    -48690997,\n    27499883\n  ]\n}"
						}
					]
				},
				{
					"name": "token create office",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "drivers list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drivers/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drivers",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/drivers/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"drivers",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"user\": {\n      \"username\": \"fNfoZnC\",\n      \"id\": 16578543,\n      \"password\": \"nisi anim\",\n      \"first_name\": \"ad nisi Excepteur\",\n      \"last_name\": \"fugiat ullamco Ut Duis minim\",\n      \"email\": \"JoFD@kenMwuIYaUUkORB.ora\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"est consequat labore mollit dolor\",\n      \"groups\": [\n        47064423,\n        -58200104\n      ],\n      \"user_permissions\": [\n        -60792166,\n        62967024\n      ]\n    },\n    \"plate\": \"mollit exercitation in ea\",\n    \"id\": \"urn:uuid:13a05eb9-ffd2-63b9-5428-9b5c95d3bcf0\",\n    \"is_active\": true,\n    \"deleted_at\": \"1985-12-19T02:11:38.858Z\"\n  },\n  {\n    \"user\": {\n      \"username\": \"Xchv150fI\",\n      \"id\": -6778409,\n      \"password\": \"voluptate minim\",\n      \"first_name\": \"incididunt quis anim\",\n      \"last_name\": \"Lorem nulla velit\",\n      \"email\": \"pXdEd6@lOFQIGE.rir\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"ipsum ex in adipisicing aliquip\",\n      \"groups\": [\n        -79697390,\n        6889852\n      ],\n      \"user_permissions\": [\n        -17036356,\n        -2707692\n      ]\n    },\n    \"plate\": \"ad qui mollit veniam reprehenderit\",\n    \"id\": \"abf64835-9675-53c6-6b53-936604b071ca\",\n    \"is_active\": false,\n    \"deleted_at\": \"2008-08-31T21:14:32.746Z\"\n  }\n]"
						}
					]
				},
				{
					"name": "orders list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://134.122.118.186/api/v1/orders/",
							"protocol": "http",
							"host": [
								"134",
								"122",
								"118",
								"186"
							],
							"path": [
								"api",
								"v1",
								"orders",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"all_drivers\": \"enim esse cillum\",\n    \"order_number\": \"consequat amet\",\n    \"id\": \"a3fbc828-0007-5785-ab18-b6e85875834b\",\n    \"created_by\": {\n      \"username\": \"iF6XC7@NIe\",\n      \"id\": -21715273\n    },\n    \"updated_by\": {\n      \"username\": \"VX9a\",\n      \"id\": -46246559\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"urn:uuid:6810e97d-4241-846d-1d76-8aa01f059f0d\",\n        \"created_by\": {\n          \"username\": \"+q7Kz4xW4\",\n          \"id\": -76087779\n        },\n        \"updated_by\": {\n          \"username\": \"ala0eENzZxs\",\n          \"id\": 37388354\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:20ac35ec-ccec-885e-87ee-27861e70b362\",\n          \"created_by\": {\n            \"username\": \"At7PHx\",\n            \"id\": 86623218\n          },\n          \"updated_by\": {\n            \"username\": \"t5O1g\",\n            \"id\": 97428564\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1968-01-04T10:37:40.029Z\",\n          \"updated_at\": \"2021-02-04T10:11:19.884Z\",\n          \"file\": \"http://exsrzCXbEeySLoCNOBTrZqbXIdsSTddN.frjJOTVF.TFxCBoEISblE3.B7N2\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -6076105,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"7fd6b061-c64d-8bef-5aac-e462e336e022\",\n          \"is_active\": true,\n          \"deleted_at\": \"1995-01-21T01:38:28.074Z\"\n        },\n        \"created_at\": \"1978-10-16T09:29:51.500Z\",\n        \"updated_at\": \"1998-02-11T18:54:04.599Z\",\n        \"status\": null,\n        \"tip\": -89243878.63232069,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:be08aaf0-cb86-0549-3497-c9e85381e1c1\",\n        \"created_by\": {\n          \"username\": \"X\",\n          \"id\": -8087985\n        },\n        \"updated_by\": {\n          \"username\": \"1+4coGUJkQ\",\n          \"id\": 89778576\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:070e6730-4900-c577-50e4-b0e8e16765f7\",\n          \"created_by\": {\n            \"username\": \"@W0ZF\",\n            \"id\": 43078449\n          },\n          \"updated_by\": {\n            \"username\": \"+9MC\",\n            \"id\": 48235855\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1946-10-11T05:07:45.967Z\",\n          \"updated_at\": \"1951-08-10T15:45:26.788Z\",\n          \"file\": \"http://B.ozL5GKCddf,bWubuQKBIujEAgb686sqs\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": -51788856,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"76587de6-7f0f-7767-63f8-fb9a5156b7de\",\n          \"is_active\": false,\n          \"deleted_at\": \"2008-05-23T00:42:18.484Z\"\n        },\n        \"created_at\": \"2021-12-22T01:05:15.091Z\",\n        \"updated_at\": \"2020-07-28T07:50:57.178Z\",\n        \"status\": null,\n        \"tip\": -75650363.48215152,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"urn:uuid:4550986a-138e-aa09-d95f-c6cebac1007a\",\n      \"populated_users\": [\n        {\n          \"password\": \"ipsum ad\",\n          \"username\": \"uu\",\n          \"id\": 28786051,\n          \"first_name\": \"sed\",\n          \"last_name\": \"exercitation\",\n          \"email\": \"XVBGV9z0TIdVk@BldIANQFuDnVtR.ao\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"dolor sunt\",\n          \"groups\": [\n            11164788,\n            -45486159\n          ],\n          \"user_permissions\": [\n            -2346166,\n            -66354432\n          ]\n        },\n        {\n          \"password\": \"dolore anim\",\n          \"username\": \"kytl\",\n          \"id\": -30017802,\n          \"first_name\": \"ex laboris\",\n          \"last_name\": \"voluptate\",\n          \"email\": \"9EB132aFu6WB@ZtIwcdMUhOyYeMWvuOFOvspVhnjCgs.ghfp\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"adipisicing ipsum sunt enim\",\n          \"groups\": [\n            -28763618,\n            54037605\n          ],\n          \"user_permissions\": [\n            81115764,\n            93913376\n          ]\n        }\n      ],\n      \"is_active\": true,\n      \"deleted_at\": \"1978-06-13T22:44:48.922Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1988-12-12T15:23:41.457Z\",\n    \"updated_at\": \"1955-11-02T13:01:09.355Z\",\n    \"file\": \"https://iuOyVsgpIrWWJLKN.nyuNvaiqBv5GuKyYT.vwqeQubIWd\",\n    \"subtotal\": 34303931.50911054,\n    \"driver_count\": 57071517,\n    \"pickup_date\": \"2020-05-20T23:36:02.445Z\",\n    \"deliver_date\": \"1987-05-04T04:41:04.779Z\",\n    \"delivered_date\": \"1972-02-28T02:21:29.557Z\",\n    \"status\": null,\n    \"note\": \"incididunt laborum mollit et enim\",\n    \"tip_from_restaurant\": -25084569.03614022,\n    \"extra_tip_from_restaurant\": 53245923.053400576,\n    \"tip_from_tfr\": -53496120.51090658,\n    \"extra_tip_from_tfr\": 83331965.88910216,\n    \"restaurant\": \"urn:uuid:d16b9cdf-b748-1520-ffae-7b69c5f4eafb\"\n  },\n  {\n    \"all_drivers\": \"dolore nisi\",\n    \"order_number\": \"ex Ut ut\",\n    \"id\": \"urn:uuid:6ce23477-4abd-f463-c23a-1b3d3cf32b3f\",\n    \"created_by\": {\n      \"username\": \"zCm.\",\n      \"id\": -16726826\n    },\n    \"updated_by\": {\n      \"username\": \"PON8gN\",\n      \"id\": 60332128\n    },\n    \"order_drivers\": [\n      {\n        \"id\": \"9fa701d9-dd1d-47de-1d55-e148e385907a\",\n        \"created_by\": {\n          \"username\": \"61_ixtmBww9\",\n          \"id\": 61190033\n        },\n        \"updated_by\": {\n          \"username\": \"Zj+G8I@\",\n          \"id\": 54843389\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"urn:uuid:12a79f5f-6416-9010-dda5-c0f1a6771df7\",\n          \"created_by\": {\n            \"username\": \"mZ1\",\n            \"id\": 27931685\n          },\n          \"updated_by\": {\n            \"username\": \"ExWLSc\",\n            \"id\": 70838965\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1984-05-05T14:21:09.380Z\",\n          \"updated_at\": \"1964-09-18T00:56:18.592Z\",\n          \"file\": \"https://aFyuSzttxTzG.tmgkrI0.iNapIlV0tSsJznwmmr6lhqe9TI5KjajK2RnSQK,\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 30605811,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": true,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:40f9fcd2-9eb9-b840-d2d6-71358dc0ab23\",\n          \"is_active\": false,\n          \"deleted_at\": \"1956-04-28T13:14:52.846Z\"\n        },\n        \"created_at\": \"1966-04-22T15:41:03.882Z\",\n        \"updated_at\": \"2002-02-03T21:23:51.153Z\",\n        \"status\": null,\n        \"tip\": 87230323.61443287,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      },\n      {\n        \"id\": \"urn:uuid:d5e4fed2-5e4f-7341-0fbf-c1ba3c53ec81\",\n        \"created_by\": {\n          \"username\": \"24V\",\n          \"id\": 58355865\n        },\n        \"updated_by\": {\n          \"username\": \"YhQ__pb\",\n          \"id\": 86375467\n        },\n        \"populated_order\": {\n          \"order_number\": \"<string>\",\n          \"id\": \"e7d72fd8-60cc-4e5d-7029-a01080509396\",\n          \"created_by\": {\n            \"username\": \"dVLS_RcI\",\n            \"id\": 58469002\n          },\n          \"updated_by\": {\n            \"username\": \"m-U3hq@Fq\",\n            \"id\": -15281945\n          },\n          \"populated_restaurant\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"populated_users\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"is_active\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"deleted_at\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"phone\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"email\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"commission\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fee\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"created_at\": \"1954-09-13T01:06:30.716Z\",\n          \"updated_at\": \"1962-06-13T18:54:13.828Z\",\n          \"file\": \"http://CYIAtogsyhGwsWcWlphDLHMFSr.ijI,bgpYb6CAnOi03Wfx.eMpX1upF.Pn-0PxtqbOn5GgVVyXym5QTLj68M-\",\n          \"subtotal\": \"<number>\",\n          \"driver_count\": \"<integer>\",\n          \"pickup_date\": \"<dateTime>\",\n          \"deliver_date\": \"<dateTime>\",\n          \"delivered_date\": \"<dateTime>\",\n          \"status\": null,\n          \"note\": \"<string>\",\n          \"tip_from_restaurant\": \"<number>\",\n          \"extra_tip_from_restaurant\": \"<number>\",\n          \"tip_from_tfr\": \"<number>\",\n          \"extra_tip_from_tfr\": \"<number>\",\n          \"restaurant\": \"<uuid>\"\n        },\n        \"populated_driver\": {\n          \"user\": {\n            \"username\": \"<string>\",\n            \"id\": 46741035,\n            \"password\": \"<string>\",\n            \"first_name\": \"<string>\",\n            \"last_name\": \"<string>\",\n            \"email\": \"<email>\",\n            \"is_active\": false,\n            \"type\": null,\n            \"phone\": \"<string>\",\n            \"groups\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"user_permissions\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          \"plate\": \"<string>\",\n          \"id\": \"urn:uuid:04948e3d-f32b-403a-3394-273644a0d41f\",\n          \"is_active\": true,\n          \"deleted_at\": \"1985-04-05T06:19:38.664Z\"\n        },\n        \"created_at\": \"1981-01-25T16:15:23.073Z\",\n        \"updated_at\": \"2018-08-06T13:26:22.032Z\",\n        \"status\": null,\n        \"tip\": -36565679.256328434,\n        \"received_date\": \"<dateTime>\",\n        \"delivered_date\": \"<dateTime>\",\n        \"driver\": \"<uuid>\",\n        \"order\": \"<uuid>\"\n      }\n    ],\n    \"populated_restaurant\": {\n      \"name\": \"<string>\",\n      \"users\": [\n        \"<integer>\"\n      ],\n      \"id\": \"da4274c7-54b2-4365-ec33-5933bbe69e91\",\n      \"populated_users\": [\n        {\n          \"password\": \"tempor id\",\n          \"username\": \"AtuI2ph\",\n          \"id\": -33411130,\n          \"first_name\": \"labore aute nostrud et consequat\",\n          \"last_name\": \"ad tempor Lorem\",\n          \"email\": \"UhwFdY2v5aODz21@okmvAFSh.fdlq\",\n          \"is_active\": true,\n          \"type\": null,\n          \"phone\": \"aliqua sint ullamco\",\n          \"groups\": [\n            -78026444,\n            21292639\n          ],\n          \"user_permissions\": [\n            -93354814,\n            55037564\n          ]\n        },\n        {\n          \"password\": \"nulla\",\n          \"username\": \"bC\",\n          \"id\": 36068443,\n          \"first_name\": \"dolore laborum dolor\",\n          \"last_name\": \"exercitation tempor ut commodo\",\n          \"email\": \"NaoyT@QyYDkhvZwDFuIE.qbzs\",\n          \"is_active\": false,\n          \"type\": null,\n          \"phone\": \"cillum aliqua officia irure enim\",\n          \"groups\": [\n            -87430794,\n            -69422303\n          ],\n          \"user_permissions\": [\n            20615723,\n            63599489\n          ]\n        }\n      ],\n      \"is_active\": false,\n      \"deleted_at\": \"1990-12-13T16:58:17.137Z\",\n      \"address\": \"<string>\",\n      \"phone\": \"<string>\",\n      \"email\": \"<email>\",\n      \"commission\": \"<number>\",\n      \"fee\": \"<number>\"\n    },\n    \"created_at\": \"1979-09-21T05:39:26.507Z\",\n    \"updated_at\": \"1950-04-17T00:42:12.900Z\",\n    \"file\": \"http://QGwooobsdEkYTncqWXkq.lhggytdfkOgezv4UcizSkzkVMtsEvGTXcYGdUUFjxW34NrS\",\n    \"subtotal\": -58946370.13684689,\n    \"driver_count\": -33269080,\n    \"pickup_date\": \"2016-03-02T06:32:52.318Z\",\n    \"deliver_date\": \"1967-02-22T10:30:44.266Z\",\n    \"delivered_date\": \"1953-04-26T22:34:17.785Z\",\n    \"status\": null,\n    \"note\": \"commodo irure et nostrud\",\n    \"tip_from_restaurant\": -32846443.222609878,\n    \"extra_tip_from_restaurant\": -44863562.6214418,\n    \"tip_from_tfr\": 28225472.466795847,\n    \"extra_tip_from_tfr\": 70951169.66399524,\n    \"restaurant\": \"d423392e-f06b-ae25-82fe-69c63725d9de\"\n  }\n]"
						}
					]
				},
				{
					"name": "users list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/?type=200&is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "200"
								},
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/?type=<string>&is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"password\": \"in amet occaecat deserunt ex\",\n    \"username\": \"orMFH\",\n    \"id\": -82681630,\n    \"first_name\": \"magna Excepte\",\n    \"last_name\": \"esse ex quis amet\",\n    \"email\": \"ZzW9k3IfRRDV@FjRlMvwAbEzMHPBR.yqv\",\n    \"is_active\": true,\n    \"type\": null,\n    \"phone\": \"esse laboris ad Duis quis\",\n    \"groups\": [\n      -36781097,\n      -28289421\n    ],\n    \"user_permissions\": [\n      58208337,\n      26457233\n    ]\n  },\n  {\n    \"password\": \"mollit laboris ea esse\",\n    \"username\": \"aDZ1y5\",\n    \"id\": 99242148,\n    \"first_name\": \"in enim dolor\",\n    \"last_name\": \"sint velit incididunt\",\n    \"email\": \"xN10jh@ktyuwOAHZPXALRUb.bm\",\n    \"is_active\": false,\n    \"type\": null,\n    \"phone\": \"nulla quis deserunt\",\n    \"groups\": [\n      -10220552,\n      18245819\n    ],\n    \"user_permissions\": [\n      96841996,\n      13221883\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/?is_active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								""
							],
							"query": [
								{
									"key": "is_active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/?is_active=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										""
									],
									"query": [
										{
											"key": "is_active",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:89c53234-77eb-1f51-4d1e-01b2cad3a5c9\",\n    \"populated_users\": [\n      {\n        \"password\": \"occaecat consectetur exercitation sint\",\n        \"username\": \"D\",\n        \"id\": -63641221,\n        \"first_name\": \"cillum aliqua ut\",\n        \"last_name\": \"deserunt aute voluptate\",\n        \"email\": \"Sc6G48@IvsdvQpQsppAiCdCpLFKeCY.uzy\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"labore laboris culpa\",\n        \"groups\": [\n          70674173,\n          -57276767\n        ],\n        \"user_permissions\": [\n          -82902944,\n          -99265398\n        ]\n      },\n      {\n        \"password\": \"in magna nisi mollit\",\n        \"username\": \"Bhw+\",\n        \"id\": -88889093,\n        \"first_name\": \"sed anim ullamco commodo\",\n        \"last_name\": \"quis irure \",\n        \"email\": \"vR8ptK0R9tz8@fgBXCbrvdQ.xb\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"ea cillum tempor dolor adipisicing\",\n        \"groups\": [\n          -42184200,\n          -50094240\n        ],\n        \"user_permissions\": [\n          -53482692,\n          95798828\n        ]\n      }\n    ],\n    \"is_active\": true,\n    \"deleted_at\": \"2000-10-24T07:44:54.285Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"users\": [\n      \"<integer>\"\n    ],\n    \"id\": \"urn:uuid:dfe81e10-3fbc-3307-d6c3-993472862c8e\",\n    \"populated_users\": [\n      {\n        \"password\": \"pariatur incididunt aute aliqua\",\n        \"username\": \"VJkzMee8j\",\n        \"id\": -69796266,\n        \"first_name\": \"dolore nostrud sit\",\n        \"last_name\": \"dolor aliqua\",\n        \"email\": \"dvZq0P54@FjAQbLTaaQXUbac.rr\",\n        \"is_active\": false,\n        \"type\": null,\n        \"phone\": \"non dolore Ut velit\",\n        \"groups\": [\n          81599462,\n          96918468\n        ],\n        \"user_permissions\": [\n          89233173,\n          48140076\n        ]\n      },\n      {\n        \"password\": \"est esse\",\n        \"username\": \"uWL4\",\n        \"id\": -41396770,\n        \"first_name\": \"deserunt amet\",\n        \"last_name\": \"ex veniam qui cupidatat\",\n        \"email\": \"0WhlEhiuJSBT@HEauKSphXIxomfR.aww\",\n        \"is_active\": true,\n        \"type\": null,\n        \"phone\": \"officia et id laboris\",\n        \"groups\": [\n          -4891433,\n          62282016\n        ],\n        \"user_permissions\": [\n          -56406790,\n          6340832\n        ]\n      }\n    ],\n    \"is_active\": false,\n    \"deleted_at\": \"1958-08-17T15:53:16.837Z\",\n    \"address\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"email\": \"<email>\",\n    \"commission\": \"<number>\",\n    \"fee\": \"<number>\"\n  }\n]"
						}
					]
				},
				{
					"name": "restaurants update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let email = pm.variables.replaceIn(\"{{$randomEmail}}\")\r",
									"console.log( email.toLowerCase())\r",
									" pm.globals.set(\"randomMail\", email.toLowerCase());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants partial update Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomProductName}}\",\n   \"users\": [\n    \"{{userID}}\"\n  ],\n  \"account_payable_name\": \"{{$randomFullName}}\",\n  \"address\": \"{{$randomStreetAddress}}\",\n  \"phone\": \"{{$randomPhoneNumber}}\",\n  \"email\":  \"{{randomMail}}\",\n  \"commission_rate\": \"{{$randomInt}}\",\n  \"fee\": \"{{$randomInt}}\",\n  \"note\": \"{{$randomCurrencyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "restaurants read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurantsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurantsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/restaurants/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) A UUID string identifying this restaurant."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"users\": [\n    \"<integer>\"\n  ],\n  \"id\": \"b9996057-0e64-38b4-fd57-0f6edf0b97ac\",\n  \"populated_users\": [\n    {\n      \"password\": \"consectetur laborum in\",\n      \"username\": \"P9Z\",\n      \"id\": -53547155,\n      \"first_name\": \"n\",\n      \"last_name\": \"aliqua ex\",\n      \"email\": \"279QoIWa@jmiUIyjXOUUsVGuUhaREjF.rqbx\",\n      \"is_active\": true,\n      \"type\": null,\n      \"phone\": \"dolor\",\n      \"groups\": [\n        28572846,\n        -1531860\n      ],\n      \"user_permissions\": [\n        -20488520,\n        -72559840\n      ]\n    },\n    {\n      \"password\": \"laboris dolore eu\",\n      \"username\": \"YR1\",\n      \"id\": 78779331,\n      \"first_name\": \"dolore est\",\n      \"last_name\": \"magna in cillum est\",\n      \"email\": \"j22BgBvahZt0F@OpNGHZTwtdFWWZkfKjiFwKzVXrBMl.gc\",\n      \"is_active\": false,\n      \"type\": null,\n      \"phone\": \"cillum ut officia velit\",\n      \"groups\": [\n        -55901708,\n        81524151\n      ],\n      \"user_permissions\": [\n        76282095,\n        7538117\n      ]\n    }\n  ],\n  \"is_active\": true,\n  \"deleted_at\": \"1961-02-06T04:30:03.579Z\",\n  \"address\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"email\": \"<email>\",\n  \"commission\": \"<number>\",\n  \"fee\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "groups create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let rndm = Math.floor(Math.random() * (40 - 1 + 1)) + 1;\r",
									"\r",
									"pm.globals.set(\"randomPermission\",rndm);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"{{randType}}\",\n  \"permissions\": [\n    \"{{randomPermission}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let rndm = Math.floor(Math.random() * (40 - 1 + 1)) + 1;\r",
									"\r",
									"pm.globals.set(\"randomPermission\",rndm);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"{{randType}}\",\n  \"permissions\": [\n    \"{{randomPermission}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups partial update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let rndm = Math.floor(Math.random() * (40 - 1 + 1)) + 1;\r",
									"\r",
									"pm.globals.set(\"randomPermission\",rndm);\r",
									"\r",
									"let type = [200,300,400];\r",
									"\r",
									"rndm = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\r",
									"\r",
									"pm.globals.set(\"randType\",type[rndm])\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomCompanyName}}\",\n  \"type\": \"{{randType}}\",\n  \"permissions\": [\n    \"{{randomPermission}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"name\": \"<string>\",\n  \"id\": 35780419,\n  \"populated_permissions\": [\n    {\n      \"name\": \"sed dolor Lorem\",\n      \"codename\": \"volup\",\n      \"id\": -24243182,\n      \"types\": \"300\"\n    },\n    {\n      \"name\": \"reprehenderit Excepteur aute laboris\",\n      \"codename\": \"et dolore aute veniam\",\n      \"id\": 7059672,\n      \"types\": \"400\"\n    }\n  ],\n  \"type\": \"<integer>\",\n  \"permissions\": [\n    \"<integer>\"\n  ]\n}"
						}
					]
				},
				{
					"name": "groups delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/{{groupsID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"{{groupsID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this group."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "users delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{userID}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userID}}",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										""
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) A unique integer value identifying this user."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "token create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"access\",jsonData.access);",
									"pm.environment.set(\"refresh\", jsonData.refresh)",
									"",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{randomUserName}}\",\n    \"password\": \"{{randPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/token/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/token/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"token",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access}}",
						"type": "string"
					}
				]
			}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://134.122.118.186/api/v1",
			"type": "string"
		}
	]
}